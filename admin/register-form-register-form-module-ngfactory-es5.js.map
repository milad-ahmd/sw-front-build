{"version":3,"sources":["webpack:///./src/app/register/register-form/login/login.component.html","webpack:///./src/app/register/register-form/login/login.component.ts","webpack:///./src/app/register/register-form/register-form-routing.module.ts","webpack:///./src/app/register/register-form/register-form.module.ts","webpack:///./src/app/register/register-form/reset-password/reset-password.component.html","webpack:///./src/app/register/register-form/reset-password/reset-password.component.ts","webpack:///./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"register-form-register-form-module-ngfactory-es5.js","sourcesContent":["<div class=\"container form-container bg-white\">\n  <div class=\"row\">\n    <div class=\"col-md-7\">\n      <img src=\"../../../../assets/images/undraw_finance_0bdk.svg\" class=\"w-100 h-100\">\n    </div>\n    <div class=\"col-md-5 login-form\">\n\n      <div class=\"col-md-12\">\n        <div class=\"site-name\">\n          بیلیونر\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\" class=\"label\">نام کاربری</label>\n            <input type=\"email\" [(ngModel)]=\"mobile\" [ngModelOptions]=\"{standalone: true}\" nbInput fullWidth id=\"exampleInputEmail1\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"exampleInputPass\" class=\"label\">کلمه عبور</label>\n            <input type=\"password\" nbInput [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" fullWidth id=\"exampleInputPass\">\n          </div>\n\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <p class=\"mb-0\" [routerLink]=\"['/register/reset-password']\" style=\"cursor: pointer\">رمز خود را فراموش کرده اید ؟</p>\n            <button class=\"btn-login\" (click)=\"login()\">\n              ورود\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { Memory } from '../../../base/memory'\nimport { Notify } from '../../../base/notify/notify'\nimport { NotifyConfig } from '../../../base/notify/notify-config'\nimport { AuthService } from '../../../services/auth.service'\n\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  mobile: string;\n  password: string;\n\n  constructor(private authService: AuthService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  login() {\n    this.authService.login({ username: this.mobile, password: this.password }).subscribe((res: any) => {\n      if (res && res.access_token) {\n        const notifyConfig = new NotifyConfig(\n          Notify.Type.SUCCESS,\n          Notify.Placement.TOP_LEFT,\n          Notify.TEMPLATES.Template2,\n          'login successful!'\n          ,\n          ''\n        );\n        Notify.showNotify(notifyConfig);\n        Memory.setToken(res.access_token);\n        this.router.navigateByUrl('/pages/iot-dashboard')\n      }\n    },error => {\n      const notifyConfig = new NotifyConfig(\n        Notify.Type.DANGER,\n        Notify.Placement.TOP_LEFT,\n        Notify.TEMPLATES.Template2,\n        'incorrect username or password!'\n        ,\n        ''\n      );\n      Notify.showNotify(notifyConfig);\n    })\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {ResetPasswordComponent} from \"./reset-password/reset-password.component\";\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path:'reset-password',component:ResetPasswordComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterFormRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { AuthService } from '../../services/auth.service'\n\nimport {RegisterFormRoutingModule} from './register-form-routing.module';\nimport {LoginComponent} from './login/login.component';\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule, NbDatepickerModule, NbIconModule,\n  NbInputModule,\n  NbMenuModule, NbRadioModule, NbSelectModule,\n} from '@nebular/theme';\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {FormsModule as ngFormsModule} from '@angular/forms';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  declarations: [LoginComponent, ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    RegisterFormRoutingModule,\n    NbMenuModule,\n    ThemeModule,\n    NbInputModule,\n    NbCardModule,\n    NbButtonModule,\n    NbActionsModule,\n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbIconModule,\n    ngFormsModule,\n  ],\n  providers:[AuthService]\n})\nexport class RegisterFormModule {\n}\n","<div class=\"container form-container bg-white\">\n  <div class=\"row\">\n    <div class=\"col-md-7\">\n      <img src=\"../../../../assets/images/reset.svg\" class=\"w-100\">\n    </div>\n    <div class=\"col-md-5 login-form\">\n\n      <div class=\"col-md-12\">\n        <div class=\"site-name\">\n          بازیابی رمز در دیرینگ\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\" class=\"label\">شماره موبایل</label>\n            <input type=\"email\" nbInput fullWidth id=\"exampleInputEmail1\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"exampleInputPass\" class=\"label\">کلمه عبور</label>\n            <input type=\"email\" nbInput fullWidth id=\"exampleInputPass\">\n          </div>\n\n          <div class=\"d-flex justify-content-end align-items-center\">\n            <button class=\"btn-login\">\n              ثبت\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ServiceBase2} from \"./serivce-base2.service\";\n\n@Injectable()\nexport class AuthService extends ServiceBase2{\n\n  constructor(public _HttpClient: HttpClient) {\n    super();\n    this._objectName = 'user/'\n  }\n  login(object) {\n    return this.postServiceF(`login/admin`,object);\n  }\n  register(object) {\n    return this.postServiceF(`/register`,object);\n  }\n  verify(object) {\n    return this.postServiceF(`/verify`,object);\n  }\n  resendCode(object) {\n    return this.postServiceF(`/resend`,object);\n  }\n  forgetPassword(object) {\n    return this.postServiceF(`/forgetPassword`,object);\n  }\n  resetPassword(object) {\n    return this.postServiceF(`/resetPassword`,object);\n  }\n  refreshToken(object) {\n    return this.getService(`/refreshToken`);\n  }\n\n}\n"],"sourceRoot":""}