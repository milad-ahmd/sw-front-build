{"version":3,"sources":["Charts/TwoLineGraph.js","Charts/RadarDiagramD3.js","Charts/OneLineChart.js","Charts/BarChartD3Horizontal.js","Charts/GaugeChart.js","Charts/RectangleD3.js","Charts/Star.js","Charts/LineGraphd3.js","Information/Information.js","Charts/BarChartD3.js"],"names":["TwoLineGraph","props","id","uuidv","replace","getId","bind","setId","this","data","parameter","min","Infinity","forEach","d","value","d3","v","max","colors","step","items","tickers","i","item","tempData","days","length","sub","deleted","push","date","moment","periodEndDay","format","volume","values","color","type","subItem","subSub","index","console","log","parseTime","map","history","redraw","svg","empty","selectAll","remove","width","node","getBoundingClientRect","x","rangeRound","y","area","y1","y0","line","attr","style","findMin","findMax","domain","xAxis","append","call","datum","on","nodes","enter","pageY","pageX","text","invert","transition","duration","window","addEventListener","opacity","className","placeContent","React","Component","RadarDiagramD3","angleToCoordinate","angle","Math","cos","radialScale","sin","getPathCoordinates","data_point","features","coordinates","ft_name","PI","A","B","C","D","E","F","G","H","I","J","key","range","curve","t","mouse","height","OneLineChart","linearGradient","lineY","data1_g","widthRectData","data2_g","align","BarChartD3Horizontal","name","margin","scale_factor","bar","bar_height","abs","margin_bar","translateX","build","GaugeDiagram","animate","arcsLength","arcPadding","RectangleD3","rectMouseOver","rectMouseLeave","Star","src","alt","reward","LineGraphd3","Tooltip","Information","BarChartD3","state","company","industry","color_bar","color_name"],"mappings":"mPAOMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJE,E,kDAQbJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,8BAGnBO,EAAMC,GACV,IAAIC,EAAMC,IAOV,OANAH,EAAKI,SAAQ,SAAAC,GACT,IAAIC,EAAQC,MAAOF,EAAEL,MAAM,SAAAQ,GAAC,OAAIA,EAAEP,MAC9BK,EAAQJ,IACRA,EAAMI,MAGPJ,I,8BAGHF,EAAMC,GACV,IAAIQ,GAAM,IAOV,OANAT,EAAKI,SAAQ,SAAAC,GACT,IAAIC,EAAQC,MAAOF,EAAEL,MAAM,SAAAQ,GAAC,OAAIA,EAAEP,MAC9BK,EAAQG,IACRA,EAAMH,MAGPG,I,0CAGU,IAAD,OACVC,EAAS,CAAC,UAAW,UAAW,UAAW,WAC7CV,EAAO,GACX,GAAqB,UAAlBD,KAAKP,MAAMmB,KAAe,CACzB,IADyB,EACrBC,EAAMb,KAAKP,MAAMQ,KAAKa,QAAQ,GAAGD,MACjCE,EAAI,EAFiB,cAGRF,GAHQ,IAGzB,2BAAwB,CAAC,IAAhBG,EAAe,QAChBC,EAAW,GACf,GAAGD,EAAKE,KAAKC,OAAO,EAAE,CAAC,IAAD,gBACFH,EAAKE,KAAK,GAAGL,OADX,IAClB,2BAAoC,CAAC,IAA5BO,EAA2B,SACd,IAAdA,EAAIC,SACJJ,EAASK,KAAK,CACVC,KAAMC,IAAOJ,EAAIK,aAAc,YAAYC,OAAO,cAClDC,OAAQP,EAAIQ,OAAOrB,SALb,8BAQlBN,EAAKqB,KAAK,CAACO,MAAOlB,EAAOI,GAAIe,KAAMd,EAAKA,KAAMf,KAAMgB,IACpDF,MAdiB,mCAmBxB,CACD,IADC,EACGF,EAAMb,KAAKP,MAAMQ,KAAKa,QAAQ,GAAGD,MADpC,cAEgBA,GAFhB,IAED,2BAAwB,CAAC,IAAD,EAAfG,EAAe,sBACAH,GADA,IACpB,2BAA2B,CAAC,IAAnBkB,EAAkB,QACvB,GAAIf,EAAKA,OAASe,EAAQf,KAAM,CAAC,IAAD,gBACZA,EAAKE,MADO,yBACnBE,EADmB,QAExBW,EAAQb,KAAKb,SAAQ,SAAC2B,EAAQC,GAC1Bb,EAAIC,SAAQ,EACRD,EAAIK,eAAiBO,EAAOP,eAC5BL,EAAIQ,OAAOrB,OAASyB,EAAOJ,OAAOrB,MAClCyB,EAAOX,SAAU,OAL7B,2BAA4B,IADA,iCAFhB,gCAFvB,8BAmBD,IAnBC,EAmBGN,EAAI,EAnBP,cAoBgBF,GApBhB,IAoBD,2BAAwB,CAAC,IAAhBG,EAAe,QACpB,GAAkB,YAAdA,EAAKA,KAAoB,CACzB,IADyB,EACrBC,EAAW,GADU,cAETD,EAAKE,MAFI,IAEzB,2BAA2B,CAAC,IAAnBE,EAAkB,SACL,IAAdA,EAAIC,SACJJ,EAASK,KAAK,CACVC,KAAMC,IAAOJ,EAAIK,aAAc,YAAYC,OAAO,cAClDC,OAAQP,EAAIQ,OAAOrB,SANN,8BASzBN,EAAKqB,KAAK,CAACO,MAAOlB,EAAOI,GAAIe,KAAMd,EAAKA,KAAMf,KAAMgB,IACpDF,MA/BP,+BA+HLmB,QAAQC,IAAIlC,GACZ,IAAMmC,EAAY5B,YAAa,YAC/BP,EAAOA,EAAKoC,KAAI,SAACC,GACb,MAAO,CACHT,MAAOS,EAAQT,MACf5B,KAAMqC,EAAQrC,KAAKoC,KACf,SAAC/B,GACG,MAAO,CACHiB,KAAMa,EAAU9B,EAAEiB,MAClBI,OAAQrB,EAAEqB,eAO9B,IAAIY,EAAS,WAET,IAAIC,EAAMhC,SAAU,EAAKX,MAAM,UAE/B2C,EAAIC,QACJD,EAAIE,UAAU,KAAKC,SACnB,IAAIC,EAAQpC,SAAU,EAAKX,MAAM,oBAAoBgD,OAAOC,wBAAwBF,MAIhFG,EAAIvC,cAAewC,WAAW,CAAC,EAAGJ,EAAQ,MAC1CK,EAAIzC,gBAAiBwC,WAAW,CAHvB,IAGgC,IACzCE,EAAO1C,SACNuC,GAAE,SAAAzC,GAAC,OAAIyC,EAAEzC,EAAEiB,SACX4B,IAAG,SAAA7C,GAAC,OAAI2C,EAAE3C,EAAEqB,WACZyB,GAPQ,KAQTC,EAAO7C,SACNuC,GAAE,SAAAzC,GAAC,OAAIyC,EAAEzC,EAAEiB,SACX0B,GAAE,SAAA3C,GAAC,OAAI2C,EAAE3C,EAAEqB,WAChBa,EACKc,KAAK,QAASV,EAAQ,KACtBU,KAAK,SAZQ,KAabC,MAAM,WAAY,IAEvBrB,QAAQC,IAAI,EAAKqB,QAAQvD,EAAM,SAC/BiC,QAAQC,IAAI,EAAKsB,QAAQxD,EAAM,SAC/BiC,QAAQC,IAAI,EAAKsB,QAAQxD,EAAM,WAC/B8C,EAAEW,OAAO,CACL,EAAKF,QAAQvD,EAAM,QACnB,EAAKwD,QAAQxD,EAAM,UAGvBgD,EAAES,OAAO,CAAC,EAAG,EAAKD,QAAQxD,EAAM,YAChC,IAAI0D,EAAQnB,EAAIoB,OAAO,KAClBN,KAAK,QAAS,UACdO,KAAKrD,aAAcuC,IAGxBY,EAAMjB,UAAU,QACXY,KAAK,OAAQ,SAElBK,EAAMjB,UAAU,QACXa,MAAM,QAAS,SAEpBI,EACKL,KAAK,YAAa,oBACvBrD,EAAKI,SAAQ,SAAAiC,GACLE,EACKsB,MAAMxB,EAAQrC,MACd2D,OAAO,QACPN,KAAK,IAAKJ,GACVI,KAAK,OAAQhB,EAAQT,OACrByB,KAAK,eAAgB,KACrBS,GAAG,aAAa,SAACzD,EAAGS,EAAGiD,GACpBxD,SAAUwD,EAAMjD,IACXuC,KAAK,eAAgB,OAE7BS,GAAG,cAAc,SAACzD,EAAGS,EAAGiD,GACrBxD,SAAUwD,EAAMjD,IACXuC,KAAK,eAAgB,QAIlCd,EACKoB,OAAO,QACPE,MAAMxB,EAAQrC,MACdqD,KAAK,IAAKD,GACVC,KAAK,SAAUhB,EAAQT,OACvByB,KAAK,OAAQ,QACbA,KAAK,eAAgB,KAC1Bd,EAAIE,UAAU,OACTzC,KAAKqC,EAAQrC,MACbgE,QACAL,OAAO,UACPN,KAAK,IAAK,GACVA,KAAK,OAAQhB,EAAQT,OACrByB,KAAK,MAAM,SAAUhD,GAClB,OAAOyC,EAAEzC,EAAEiB,SAEd+B,KAAK,MAAM,SAAUhD,GAClB,OAAO2C,EAAE3C,EAAEqB,WAEdoC,GAAG,aAAa,SAACzD,EAAGS,EAAGiD,GAEpBxD,SAAU,EAAKX,MAAM,cAChB0D,MAAM,UAAW,GACjBA,MAAM,MAAQ/C,QAAS0D,MAAS,MAChCX,MAAM,OAAS/C,QAAS2D,MAAS,MAEtC3D,SAAU,EAAKX,MAAM,iBAChBuE,KAAKnB,EAAEoB,OAAO7D,QAASwD,EAAMjD,IAAI,QAEzCgD,GAAG,YAAY,SAACzD,GACbE,SAAU,EAAKX,MAAM,cAChByE,aACAC,SAAS,KACThB,MAAM,UAAW,UAM1ChB,IACAiC,OAAOC,iBAAiB,SAAUlC,K,+BAMlC,OACI,6BACI,kBAAC,IAAD,CAAS7C,GAAIM,KAAKD,MAAM,aAAcwD,MAAO,CAACmB,QAAS,IACnD,yBAAKnB,MAAO,CAAC1B,MAAO,SAAUnC,GAAIM,KAAKD,MAAM,mBAIjD,yBAAK4E,UAAW,MAAOjF,GAAIM,KAAKD,MAAM,mBAAoBwD,MAAO,CAACqB,aAAc,WAC5E,yBAAKD,UAAW,MAAOjF,GAAIM,KAAKD,MAAM,iB,GAjU/B8E,IAAMC,WA0UlBtF,O,wIC5UTuF,E,kDACF,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJE,E,kDAMbJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAE3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,0CAGvB,IAGIsF,EAAoB,SAACC,EAAO1E,GAG5B,MAAO,CAAC,EAAK,IAFL2E,KAAKC,IAAIF,GAASG,EAAY7E,GAElB,EAAK,IADjB2E,KAAKG,IAAIJ,GAASG,EAAY7E,KAGtC+E,EAAqB,SAACC,EAAWC,GAEjC,IADA,IAAIC,EAAc,GACT1E,EAAI,EAAGA,EAAIyE,EAASrE,OAAQJ,IAAI,CACrC,IAAI2E,EAAUF,EAASzE,GACnBkE,EAASC,KAAKS,GAAK,EAAM,EAAIT,KAAKS,GAAK5E,EAAIyE,EAASrE,OACxDsE,EAAYnE,KAAK0D,EAAkBC,EAAOM,EAAWG,KAEzD,OAAOD,GAEPxF,EAAO,CACP,CACI2F,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,IAGNb,EAAW,GACf,IAAK,IAAIc,KAAOrG,EAAK,GACjBuF,EAASlE,KAAKgF,GAElB,IAAI3F,EAAS,CAAC,cACVyE,EAAc5E,gBACbkD,OAAO,CAAC,EAAE,KACV6C,MAAM,CAAC,EAAE,MAEVlD,EAAO7C,SACNgG,MAAMhG,oBACNuC,GAAE,SAASzC,GAAK,OAAOA,EAAEyC,KACzBE,GAAE,SAAS3C,GAAK,OAAOA,EAAE2C,KAC1BT,EAAMhC,SAAUR,KAAKH,MAAM,QALnB,CAAC,EAAE,EAAE,EAAE,EAAE,GAMfQ,SAAQ,SAAAoG,GAAC,OACXjE,EAAIoB,OAAO,UACNN,KAAK,KAAM,KACXA,KAAK,KAAM,KACXA,KAAK,IAAK8B,EAAYqB,IACtBnD,KAAK,QAAQ,WACV,OAAImD,EAAI,IAAM,EACH,UAEA,aAGdnD,KAAK,WAAU,WACZ,MAAO,SAGnB,IAAK,IAAIvC,EAAI,EAAGA,EAAId,EAAKkB,OAAQJ,IAAK,CAClC,IACIc,EAAQlB,EAAOI,GACf0E,EAAcH,EAFVrF,EAAKc,GAE0ByE,GAEvChD,EAAIoB,OAAO,QACNE,MAAM2B,GACNnC,KAAK,IAAID,GACTC,KAAK,eAAgB,GACrBA,KAAK,SAAUzB,GACfyB,KAAK,OAAQzB,GACbyB,KAAK,iBAAkB,GACvBA,KAAK,UAAW,IAChBS,GAAG,aAAY,SAAUzD,EAAGS,EAAGiD,GA1EtB,IAAC0C,IA2EKlG,QAASR,MA1E7BkC,QAAQC,IAAIuE,GA2EJlG,SAAUwD,EAAMjD,IACXuC,KAAK,UAAU,OAEvBS,GAAG,YAAW,SAAUzD,EAAGS,EAAGiD,GAC3BxD,SAAUwD,EAAMjD,IACXuC,KAAK,UAAU,U,+BAKhC,OACI,yBAAK5D,GAAI,iBACL,kBAAC,IAAD,CAASA,GAAIM,KAAKD,MAAM,aAAcwD,MAAO,CAACmB,QAAQ,IAClD,yBAAKnB,MAAO,CAAC1B,MAAM,SAAUnC,GAAIM,KAAKD,MAAM,mBAGhD,yBAAKL,GAAIM,KAAKD,MAAM,OAAQ6C,MAAO,IAAK+D,OAAQ,W,GA1GnC9B,IAAMC,WAgHpBC,O,qJC7GT6B,E,kDACF,WAAYnH,GAAQ,IAAD,8BACf,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJE,E,kDAQbJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,0CAKvB,IAMI8C,EAAMhC,SAAUR,KAAKH,MAAM,QAC1ByD,KAAK,QAPE,KAQPA,KAAK,SAAS,KACfuD,EAAiBrE,EAAIoB,OAAO,kBAC3BN,KAAK,KAAKtD,KAAKD,MAAM,gBAE1B8G,EAAejD,OAAO,QACjBN,KAAK,SAAS,MACdA,KAAK,aAAa,WACvBuD,EAAejD,OAAO,QACjBN,KAAK,SAAS,OACdA,KAAK,aAAa,WAGvBuD,EAAejD,OAAO,QACjBN,KAAK,SAAS,QACdA,KAAK,aAAa,WAGvBd,EAAIoB,OAAO,QACNN,KAAK,OAAO,WACZA,KAAK,IAAI,GACTA,KAAK,KAAI,WACN,OAAOwD,MAEVxD,KAAK,QAAS,GACdA,KAAK,SA/BU,GAiCpBd,EAAIoB,OAAO,QACNN,KAAK,OAAS,WACdA,KAAK,KAAO,GACZA,KAAK,KAAI,WACN,OAAOwD,OAEVxD,KAAK,aAAY,WAEd,MAAO,qBAEVM,OAAO,SACPQ,KAAK,SAEV5B,EAAIoB,OAAO,QACNN,KAAK,OAAO,WACZA,KAAK,IAjDE,KAkDPA,KAAK,KAAI,WACN,OAAOwD,MAEVxD,KAAK,QAAS,GACdA,KAAK,SArDU,GAuDpBd,EAAIoB,OAAO,QACNN,KAAK,OAAS,WACdA,KAAK,cAAgB,OACrBA,KAAK,IA3DE,KA4DPA,KAAK,KAAI,WACN,OAAOwD,OAEVxD,KAAK,aAAY,WAEd,MAAO,oBAEVM,OAAO,SACPQ,KAAK,OAEV5B,EAAIoB,OAAO,QACNN,KAAK,OAAO,WACZA,KAAK,IAAIV,KACTU,KAAK,KAAI,WACN,OAAOwD,OAEVxD,KAAK,QAAS,GACdA,KAAK,SA3Ea,IA6EvBd,EAAIoB,OAAO,QACNN,KAAK,OAAS,WACdA,KAAK,cAAgB,UACrBA,KAAK,IAAMV,KACXU,KAAK,KAAI,WACN,OAAOwD,OAEVxD,KAAK,aAAY,WAEd,MAAO,oBAEVM,OAAO,SACPQ,KAAK,UAIV5B,EAAIoB,OAAO,QACNN,KAAK,IAAI,GACTA,KAAK,IA5FE,KA6FPA,KAAK,SAAS,GACdA,KAAK,QAnGE,KAoGPC,MAAM,OAAO,OAAOvD,KAAKH,MAAM,eAAe,KAC9C0D,MAAM,eAAe,GAI1B,IAAIwD,EAAUvE,EAAIoB,OAAO,KACpBN,KAAK,aAAY,WAId,MAAO,sBAEfyD,EACKnD,OAAO,QACPN,KAAK,OAAO,WACZA,KAAK,KAAK,GACVA,KAAK,IAAI,GACTA,KAAK,KAAI,WACN,OAAO,MAEVA,KAAK,SAAQ,WACV,OAtHY,MAwHfA,KAAK,SAvHW,IA0HrByD,EACKnD,OAAO,QACPN,KAAK,cAAc,UACnBA,KAAK,OAAO,SACZA,KAAK,KAAI,WACN,OAAO0D,MAEV1D,KAAK,KAAI,WACN,OAAO,MAEVM,OAAO,SACPQ,KAAK,UAGV,IAAI6C,EAAUzE,EAAIoB,OAAO,KACpBN,KAAK,aAAY,WAId,MAAO,uBAEf2D,EACKrD,OAAO,QACPN,KAAK,KAAK,GACVA,KAAK,OAAO,WACZA,KAAK,IAAI,GACTA,KAAK,KAAI,WACN,OAAO,MAEVA,KAAK,SAAQ,WACV,OAzJY,MA2JfA,KAAK,SA1JW,IA6JrB2D,EACKrD,OAAO,QACPN,KAAK,cAAc,UACnBA,KAAK,OAAO,SACZA,KAAK,KAAI,WACN,OAAO0D,MAEV1D,KAAK,KAAI,WACN,OAAO,MAEVM,OAAO,SACPQ,KAAK,Y,+BAIV,OACI,yBAAK1E,GAAIM,KAAKD,MAAM,iBAAkBmH,MAAO,UACzC,yBAAKxH,GAAIM,KAAKD,MAAM,OAAQ4E,UAAW,a,GArM5BE,IAAMC,WA6MlB8B,O,qJCjNTO,E,kDACF,WAAY1H,GAAO,IAAD,8BACd,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJC,E,kDAQZJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,8BAIvB,IAAIkD,EAAQpC,SAAUR,KAAKH,MAAM,kBAAkBgD,OAAOC,wBAAwBF,MAC9E3C,EAAO,CACP,CAACM,MAAO,EAAE6G,KAAK,qDACf,CAAC7G,MAAO,GAAG6G,KAAK,sDAIhBC,EACO,GADPA,EAEI,GAIJC,EAAe1E,EAAM,GAErBJ,EAAMhC,SAAUR,KAAKH,MAAM,QAC1ByD,KAAK,QAASV,GACdU,KAAK,SAZG,IAYgB+D,GACxB/D,KAAK,YAAY,eAAe+D,EAAW,KAChD7E,EAAIC,QACJD,EAAIE,UAAU,KAAKC,SACnB,IAAIkE,EAAiBrE,EAAIoB,OAAO,kBAC3BN,KAAK,KAAKtD,KAAKD,MAAM,gBAE1B8G,EAAejD,OAAO,QACjBN,KAAK,SAAS,MACdA,KAAK,aAAa,mBAClBA,KAAK,eAAe,OAEzBuD,EAAejD,OAAO,QACjBN,KAAK,SAAS,QACdA,KAAK,aAAa,mBAClBA,KAAK,eAAe,OAGzBd,EAAIoB,OAAO,QACNN,KAAK,QAASV,GACdU,KAAK,SAhCG,KAiCRA,KAAK,OAAQ,WAElBd,EAAIoB,OAAO,QACNQ,KAAK,4BACLd,KAAK,OAAO,WACZA,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,aAAe6B,EAAf,wBAEfJ,EAAIoB,OAAO,QACNN,KAAK,QAAiB,IAARV,GACdU,KAAK,SA5CG,KA6CRA,KAAK,OAAQ,WAElBd,EAAIoB,OAAO,QACNQ,KAAK,sBACLd,KAAK,OAAO,WACZA,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,aAAqB,IAAN6B,EAAf,wBAGfJ,EAAIoB,OAAO,QACNN,KAAK,QAAiB,IAARV,GACdU,KAAK,SAzDG,KA0DRA,KAAK,OAAQ,WAClBd,EAAIoB,OAAO,QACNQ,KAAK,sBACLd,KAAK,OAAO,WACZA,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,aAAqB,IAAN6B,EAAf,wBAGf,IAAI2E,EAAM/E,EAAIE,UAAU,KACnBzC,KAAKA,GACLgE,QACAL,OAAO,KACPN,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,gBAxEE,GAuEQA,EA/DR,IA+DuCA,EAAE,IACd,OAI5CwG,EAAI3D,OAAO,QACNN,KAAK,SAAS,SAAUhD,GACrB,OAAOA,EAAEC,MAAQ+G,KAEpBhE,KAAK,SAAUkE,IACflE,KAAK,OAAQ,OAAOtD,KAAKH,MAAM,eAAe,KAGnD0H,EAAI3D,OAAO,QACNN,KAAK,MAAK,SAAUhD,EAAES,GACnB,OAAOT,EAAEC,MAAQ+G,KAEpBhE,KAAK,MAAK,SAAUhD,EAAES,GAEnB,OADAmB,QAAQC,IAAI,IAAIpB,GACR,KAEXuC,KAAK,MAAK,SAAUhD,EAAES,GACnB,OAAOT,EAAEC,MAAQ+G,KAGpBhE,KAAK,MAAK,SAAUhD,EAAES,GACnB,OAjGS,MAmGZuC,KAAK,QAAQ,eAElBiE,EAAI3D,OAAO,QACNQ,MAAK,SAAU9D,EAAES,GACd,OAAOT,EAAE8G,QAEZ9D,KAAK,QAAQ,cACbA,KAAK,aAAa,SAAUhD,EAAGS,GAG5B,MAAO,cADUT,EAAEC,MAAM+G,EAAe,IACjC,UAEfC,EAAI3D,OAAO,QACNQ,MAAK,SAAU9D,EAAES,GACd,MAAO,IAAMT,EAAEC,SAElB+C,KAAK,QAAQ,eAEbA,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,cADUT,EAAEC,MAAM+G,EAAe,IACjC,UAIf9E,EAAIoB,OAAO,QACNN,KAAK,SAAQ,WACV,OAAO4B,KAAKuC,IAAIxH,EAAK,GAAGM,MAAQN,EAAK,GAAGM,OAAS+G,KAEpDhE,KAAK,OAAO,WACZA,KAAK,SAAS,GACdA,KAAK,aAAa,WAGf,MAAO,aAFU4B,KAAK/E,IAAIF,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,EAExB,IAA1B,UAEf9E,EAAIoB,OAAO,QACNN,KAAK,MAAK,WACP,OAAO4B,KAAK/E,IAAIF,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,KAElDhE,KAAK,MAAM,IACXA,KAAK,MAAK,WACP,OAAO4B,KAAK/E,IAAIF,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,KAElDhE,KAAK,KAtIO,IAuIZA,KAAK,QAAQ,0BAClBd,EAAIoB,OAAO,QACNN,KAAK,MAAK,WACP,OAAO4B,KAAKxE,IAAIT,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,KAElDhE,KAAK,MAAM,IACXA,KAAK,MAAK,WACP,OAAO4B,KAAKxE,IAAIT,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,KAElDhE,KAAK,KAAKoE,KACVpE,KAAK,QAAQ,0BAElBd,EAAIoB,OAAO,QACNQ,MAAK,WACF,MAAO,IAAMc,KAAKuC,IAAIxH,EAAK,GAAGM,MAAMN,EAAK,GAAGM,UAE/C+C,KAAK,aAAa,WACf,IAAIqE,EAAazC,KAAK/E,IAAIF,EAAK,GAAGM,MAAMN,EAAK,GAAGM,OAAS+G,EAGzD,MAAO,cAFPK,GAA0B,IAEO,IAA1B,UAEVrE,KAAK,QAAQ,qB,0CAGD,IAAD,OAChBtD,KAAK4H,QACLpH,SAAUgE,QAAQT,GAAG,UAAS,WAC1B,EAAK6D,a,+BAIT,OACI,yBAAKjD,UAAW,oBAAqBjF,GAAIM,KAAKD,MAAM,kBAEhD,yBAAKL,GAAIM,KAAKD,MAAM,OAAQ4E,UAAW,a,GA1MpBE,IAAMC,WAiN1BqC,O,qICjNTU,E,kLAEErH,SAAU,iBACL8C,KAAK,QAAQ,O,+BAIlB,OACI,yBAAK4D,MAAO,UACR,kBAAC,IAAD,CAAYxH,GAAG,eACb6D,MAAO,CAACX,MAAM,QACdkF,SAAS,EACTC,WAAY,CAAC,GAAK,GAAK,IACvBpH,OAAQ,CAAC,oBAAqB,UAAW,kBACzCqH,WAAY,W,GAdHnD,IAAMC,WAqBlB+C,O,qJClBTI,E,kDACF,aAAe,IAAD,8BACV,gBACKvI,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJH,E,kDAORJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,8BAElB,IAAD,OACAwI,EAAgB,SAAC5H,EAAGS,EAAGiD,GACZxD,SAAUwD,EAAMjD,IAEtBuC,KAAK,UAAU,KAKpB6E,EAAgB,SAAC7H,EAAGS,EAAGiD,GAEvB9B,QAAQC,IAAI,eACZ3B,SAAUwD,EAAMjD,IACXuC,KAAK,UAAW,GAErB9C,SAAU,EAAKX,MAAM,cAChB0D,MAAM,UAAW,SAMtBf,EAAMhC,SAAUR,KAAKH,MAAM,QAC1ByD,KAAK,QAHE,KAIPA,KAAK,SAHG,KAKbd,EAAIoB,OAAO,QACNN,KAAK,IAAI,GACTA,KAAK,IAAI,GACTA,KAAK,QAAQV,KACbU,KAAK,SATG,KAURA,KAAK,OAAO,qBACZS,GAAG,aAAY,SAAUzD,EAAES,EAAEiD,GAE1BkE,EAAc5H,EAAES,EAAEiD,MAErBD,GAAG,cAAa,SAAUzD,EAAES,EAAEiD,GAC3BmE,EAAe7H,EAAES,EAAEiD,MAE3BxB,EAAIoB,OAAO,KACNN,KAAK,aAAY,WAId,MAAO,uBAEVM,OAAO,QACPN,KAAK,cAAe,UACpBM,OAAO,SACPQ,KAAK,aAKV5B,EAAIoB,OAAO,QACNN,KAAK,IAAIV,KACTU,KAAK,IAAI,GACTA,KAAK,SAAQ,WACV,OAAO,MAEVA,KAAK,UAAS,WACX,OAAOqD,OAEVrD,KAAK,OAAO,qBACZS,GAAG,aAAY,SAAUzD,EAAES,EAAEiD,GAE1BkE,EAAc5H,EAAES,EAAEiD,MAErBD,GAAG,cAAa,SAAUzD,EAAES,EAAEiD,GAC3BmE,EAAe7H,EAAES,EAAEiD,MAE3BxB,EAAIoB,OAAO,KACNN,KAAK,aAAY,WAGd,MAAO,0BAEVM,OAAO,QACPN,KAAK,cAAe,UACpBM,OAAO,SACPQ,KAAK,aAGV5B,EAAIoB,OAAO,QACNN,KAAK,KAAI,WACN,OAAO,OAEVA,KAAK,IAAI,GACTA,KAAK,SAAQ,WACV,OAAOV,MAGVU,KAAK,UAAS,WACX,OAAOqD,OAEVrD,KAAK,OAAO,qBACZS,GAAG,aAAY,SAAUzD,EAAES,EAAEiD,GAE1BkE,EAAc5H,EAAES,EAAEiD,MAErBD,GAAG,cAAa,SAAUzD,EAAES,EAAEiD,GAC3BmE,EAAe7H,EAAES,EAAEiD,MAE3BxB,EAAIoB,OAAO,KACNN,KAAK,aAAY,WAId,MAAO,0BAEVM,OAAO,QACPN,KAAK,cAAe,UACpBM,OAAO,SACPQ,KAAK,aAEV5B,EAAIoB,OAAO,QACNN,KAAK,KAAI,WACN,OAAOV,OAEVU,KAAK,KAAI,WACN,OAAOqD,OAEVrD,KAAK,SAAQ,WACV,OAAOV,OAGVU,KAAK,UAAS,WACX,OAAOqD,MAEVrD,KAAK,OAAO,kBACZS,GAAG,aAAY,SAAUzD,EAAES,EAAEiD,GAC1BkE,EAAc5H,EAAES,EAAEiD,MAErBD,GAAG,cAAa,SAAUzD,EAAES,EAAEiD,GAC3BmE,EAAe7H,EAAES,EAAEiD,MAE3BxB,EAAIoB,OAAO,KACNN,KAAK,aAAY,WAId,MAAO,wBAEVM,OAAO,QACPN,KAAK,cAAe,UACpBM,OAAO,SACPQ,KAAK,e,0CAOVpE,KAAK4H,U,+BAIL,OACI,yBAAKlI,GAAIM,KAAKD,MAAM,iBAAkBmH,MAAO,UACzC,kBAAC,IAAD,CAASxH,GAAIM,KAAKD,MAAM,aAAcwD,MAAO,CAACmB,QAAQ,IAClD,yBAAKnB,MAAO,CAAC1B,MAAM,SAAUnC,GAAIM,KAAKD,MAAM,mBAGhD,yBAAKL,GAAIM,KAAKD,MAAM,OAAQ4E,UAAW,a,GAlL7BE,IAAMC,WA2LjBmD,O,uKC3KAG,G,kOAdP,OACI,6BACI,yBAAKxF,MAAO,KACR+D,OAAQ,KACR0B,IAAK,4EAA6EC,IAAK,KAE3F,2BAAO/E,MAAO,CAAC1B,MAAM,UAChB7B,KAAKP,MAAM8I,a,GAdb1D,IAAMC,Y,mDCwMV0D,E,kDAhMX,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAJE,E,kDAQbJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,0CAGN,IAAD,OAEZ4C,EAAU,CACV,CAACf,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,EAAGI,OAAQ,WAClB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAGI,OAAQ,WAClB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,UACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,KAAMI,OAAQ,WACrB,CAACJ,KAAM,KAAMI,OAAQ,WACrB,CAACJ,KAAM,KAAMI,OAAQ,WACrB,CAACJ,KAAM,KAAMI,OAAQ,WAErB,CAACJ,KAAM,GAAII,OAAQ,WACnB,CAACJ,KAAM,GAAII,OAAQ,YAQnBY,EAAS,WACT,IAAIC,EAAMhC,SAAU,EAAKX,MAAM,UAE/B2C,EAAIC,QACJD,EAAIE,UAAU,KAAKC,SACnB,IAAIC,EAAQpC,SAAU,EAAKX,MAAM,oBAAoBgD,OAAOC,wBAAwBF,MAIhFG,EAAIvC,cAAewC,WAAW,CAAC,EAAGJ,EAAM,MACxCK,EAAKzC,gBAAiBwC,WAAW,CAHxB,IAGiC,IAC1CE,EAAO1C,SACNuC,GAAE,SAAAzC,GAAC,OAAKyC,EAAEzC,EAAEiB,SACZ4B,IAAG,SAAA7C,GAAC,OAAK2C,EAAE3C,EAAEqB,WACbyB,GAPQ,KAQTC,EAAO7C,SACNuC,GAAE,SAAAzC,GAAC,OAAKyC,EAAEzC,EAAEiB,SACZ0B,GAAE,SAAA3C,GAAC,OAAK2C,EAAE3C,EAAEqB,WACjBiB,EAAQpC,SAAU,EAAKX,MAAM,oBAAoBgD,OAAOC,wBAAwBF,MAEhFJ,EACKc,KAAK,QAASV,EAAQ,KACtBU,KAAK,SAAUqD,KACfpD,MAAM,WAAY,KAGvBR,EAAIvC,gBAAiBwC,WAAW,CAAC,EAAGJ,EAAQ,OAG1Cc,OAAO,CACLlD,MAAO8B,GAAS,SAAAhC,GAAC,OAAIA,EAAEiB,QACvBf,MAAO8B,GAAS,SAAAhC,GAAC,OAAIA,EAAEiB,UAG3B0B,EAAES,OAAO,CAAC,EAAGlD,MAAO8B,GAAS,SAAAhC,GAAC,OAAIA,EAAEqB,YACpC,IAAIgC,EAAQnB,EAAIoB,OAAO,KAClBN,KAAK,QAAS,UACdO,KAAKrD,aAAcuC,IAGxBY,EAAMjB,UAAU,QACXY,KAAK,OAAQ,SAElBK,EAAMjB,UAAU,QACXa,MAAM,QAAS,SAGpBI,EACKL,KAAK,YAAa,oBAEvBd,EACKsB,MAAMxB,GACNsB,OAAO,QACPN,KAAK,IAAKJ,GACVI,KAAK,OAAQ,aACbA,KAAK,eAAgB,KACH,IAApB,EAAK7D,MAAM4D,MACVb,EACKoB,OAAO,QACPE,MAAMxB,GACNgB,KAAK,IAAKD,GACVC,KAAK,SAAU,WACfA,KAAK,OAAQ,QACbA,KAAK,eAAgB,KAE9Bd,EAAIE,UAAU,OACTzC,KAAKqC,GACL2B,QACAL,OAAO,UACPN,KAAK,IAAI,GACTA,KAAK,OAAO,WACZA,KAAK,MAAK,SAAUhD,GACjB,OAAOyC,EAAEzC,EAAEiB,SAEd+B,KAAK,MAAK,SAAUhD,GACjB,OAAO2C,EAAE3C,EAAEqB,WAEdoC,GAAG,aAAa,SAACzD,EAAGS,EAAGiD,GAEpBxD,SAAU,EAAKX,MAAM,cAChB0D,MAAM,UAAW,GACjBA,MAAM,MAAQ/C,QAAS0D,MAAS,MAChCX,MAAM,OAAS/C,QAAS2D,MAAS,MAEtC3D,SAAU,EAAKX,MAAM,iBAChBuE,KAAKnB,EAAEoB,OAAO7D,QAASwD,EAAMjD,IAAI,QAEzCgD,GAAG,YAAY,SAACzD,GACbE,SAAU,EAAKX,MAAM,cAChByE,aACAC,SAAS,KACThB,MAAM,UAAW,OAMlChB,IACAiC,OAAOC,iBAAiB,SAAUlC,K,+BAKlC,OACA,6BACI,kBAACkG,EAAA,EAAD,CAAS/I,GAAIM,KAAKD,MAAM,aAAcwD,MAAO,CAACmB,QAAQ,IAClD,yBAAKnB,MAAO,CAAC1B,MAAM,SAAUnC,GAAIM,KAAKD,MAAM,mBAIhD,yBAAK4E,UAAW,MAAOjF,GAAIM,KAAKD,MAAM,mBAAoBwD,MAAO,CAACqB,aAAa,WAC3E,yBAAKD,UAAW,MAAOjF,GAAIM,KAAKD,MAAM,iB,GAxL5B8E,IAAMC,W,qDCG1B4D,E,uKAEE,OACI,yBAAK/D,UAAW,aACZ,yBAAKA,UAAW,YACZ,yBAAKA,UAAW,qDAEZ,mGAGA,iKAGA,8DAGA,6BACI,kBAAC,EAAD,CAAM4D,OAAQ,sDACd,kBAAC,EAAD,CAAMA,OAAQ,sDACd,kBAAC,EAAD,CAAMA,OAAQ,wDAGtB,yBAAK5D,UAAW,iEACZ,kBAACI,EAAA,EAAD,QAIR,yBAAKJ,UAAW,QACZ,yBAAKA,UAAW,cACZ,2GAIJ,kBAAC,EAAD,OAEJ,yBAAKA,UAAW,QACZ,yBAAKA,UAAW,cACZ,wFAIJ,kBAAC,EAAD,CAAatB,MAAM,KAEvB,yBAAKsB,UAAW,QACZ,yBAAKA,UAAW,cACZ,8FAIJ,kBAACnF,EAAA,EAAD,OAGJ,yBAAKmF,UAAW,QACZ,yBAAKA,UAAW,cACZ,oIAIJ,kBAACwC,EAAA,EAAD,OAGJ,yBAAKxC,UAAW,QACZ,yBAAKA,UAAW,cACZ,0IAKJ,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,0CACZ,kBAACgE,EAAA,EAAD,MACA,yBAAKzB,MAAO,SAAUvC,UAAW,kBAAjC,4DAKJ,yBAAKA,UAAW,0CACZ,kBAACgE,EAAA,EAAD,MACA,yBAAKzB,MAAO,SAAUvC,UAAW,kBAAjC,8DAMZ,yBAAKA,UAAW,QACZ,yBAAKA,UAAW,cACZ,8FAKJ,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,0CACZ,kBAACsD,EAAA,EAAD,MACA,yBAAKf,MAAO,SAAUvC,UAAW,kBAAjC,4DAKJ,yBAAKA,UAAW,0CACZ,kBAACsD,EAAA,EAAD,MACA,yBAAKf,MAAO,SAAUvC,UAAW,kBAAjC,8DAMZ,yBAAKA,UAAW,QACZ,yBAAKA,UAAW,cACZ,0GAKJ,kBAACiC,EAAA,EAAD,OAEJ,yBAAKjC,UAAW,QACZ,yBAAKA,UAAW,cACZ,8FAKJ,kBAAC,IAAD,Y,GA3HME,IAAMC,WAiIjB4D,a,qHCxITC,G,yDACF,WAAYlJ,GAAQ,IAAD,8BACf,cAAMA,IACDC,GAAK,IAAMC,MAAQC,QAAQ,KAAM,IACtC,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAK8I,MAAQ,CACTC,QAAS,GACTC,SAAS,IAPE,E,kDAWbpJ,GACF,MAAO,IAAMM,KAAKN,GAAK,IAAMA,I,4BAG3BA,GACF,OAAOM,KAAKN,GAAK,IAAMA,I,8BAIvB,IAUI8C,EAAMhC,SAAUR,KAAKH,MAAM,QAC1ByD,KAAK,QAXE,KAYPA,KAAK,SANG,KAQbd,EAAIC,QACJD,EAAIE,UAAU,KAAKC,SAEnB,IAAI4E,EAAM/E,EAAIE,UAAU,KACnBzC,KAjBM,CACP,CAACM,OAAQ,EAAG6G,KAAM,2BAAQ2B,UAAW,UAAWC,WAAY,SAC5D,CAACzI,MAAO,GAAI6G,KAAM,2BAAQ2B,UAAW,UAAWC,WAAY,WAgB3D/E,QACAL,OAAO,OACPN,KAAK,KAAK,SAAUhD,EAAGS,GACpB,OAfQ6B,IAeW7B,KAEtBuC,KAAK,IAAK,GACVA,KAAK,QAlBMV,MAoBhB2E,EAAMA,EAAI3D,OAAO,KACZN,KAAK,aAAa,SAAUhD,EAAGS,GAE5B,MAAO,gBAxBF,IAEM,EAqBiBT,EAAEC,OACO,QAGzCqD,OAAO,QACNN,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QA7BMV,KA8BXU,KAAK,UAAU,SAAUhD,GACtB,OA9BW,EA8BHA,EAAEC,SAEb+C,KAAK,QAAQ,SAAUhD,GACpB,OAAOA,EAAEyI,aAEFxB,EAAI3D,OAAO,OACrBN,KAAK,IAAK,GACVA,KAAK,IAAK,IACVA,KAAK,QAAS,YAGdM,OAAO,QACPN,KAAK,QAAS,YACdM,OAAO,SACPN,KAAK,IAAK,GACVc,MAAK,SAAU9D,EAAGS,GACf,OAAOT,EAAE8G,QAEZ9D,KAAK,QAAQ,SAAUhD,EAAGS,GACvB,OAAOT,EAAE0I,cAGIzB,EAAI3D,OAAO,OAC3BN,KAAK,IAAK,GACVA,KAAK,KAAM,GACXA,KAAK,QAAS,kBAEdM,OAAO,QACPN,KAAK,QAAS,kBACdM,OAAO,SACPN,KAAK,IAAK,GACVc,MAAK,SAAU9D,EAAGS,GACf,OAAOT,EAAEC,SAIjBiC,EAAIoB,OAAO,QACNN,KAAK,IAAK,GACVA,KAAK,IAtEG,KAuERA,KAAK,QA7EE,KA8EPA,KAAK,SAAU,GACfA,KAAK,OAAQ,W,0CAIlBpB,QAAQC,IAAInC,KAAKP,MAAMQ,MAcvBD,KAAK4H,U,+BAIL,OACI,yBAAKlI,GAAIM,KAAKD,MAAM,iBAAkBmH,MAAO,UACzC,yBAAKxH,GAAIM,KAAKD,MAAM,OAAQ4E,UAAW,a,GA5H9BE,IAAMC,YAoIhB6D","file":"static/js/13.593acf44.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3'\nimport '../scss/two-line-graph.scss'\nimport {Tooltip} from \"react-bootstrap\";\nimport uuidv from 'uuid/v4';\nimport moment from \"moment\";\n\nclass TwoLineGraph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n\n    }\n\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n\n    findMin(data, parameter) {\n        let min = Infinity\n        data.forEach(d => {\n            let value = d3.min(d.data, v => v[parameter])\n            if (value < min) {\n                min = value\n            }\n        })\n        return min\n    }\n\n    findMax(data, parameter) {\n        let max = -1 * Infinity\n        data.forEach(d => {\n            let value = d3.max(d.data, v => v[parameter])\n            if (value > max) {\n                max = value\n            }\n        })\n        return max\n    }\n\n    componentDidMount() {\n        const colors = ['#80ff80', '#f9f3ff', '#AA3590', '#AA7E3C'];\n        let data = [];\n        if(this.props.step==='step6'){\n            let items=this.props.data.tickers[0].items;\n            let i = 0\n            for (let item of items) {\n                let tempData = [];\n                if(item.days.length>0){\n                    for (let sub of item.days[0].items) {\n                        if (sub.deleted===false)\n                            tempData.push({\n                                date: moment(sub.periodEndDay, 'YYYYMMDD').format('YYYY-MM-DD'),\n                                volume: sub.values.value\n                            })\n                    }\n                    data.push({color: colors[i], type: item.item, data: tempData})\n                    i++;\n                }\n\n            }\n\n        }else{\n            let items=this.props.data.tickers[0].items;\n            for (let item of items) {\n                for (let subItem of items) {\n                    if (item.item === subItem.item) {\n                        for (let sub of item.days) {\n                            subItem.days.forEach((subSub, index) => {\n                                sub.deleted=false\n                                if (sub.periodEndDay === subSub.periodEndDay) {\n                                    sub.values.value += subSub.values.value\n                                    subSub.deleted = true;\n                                }\n                            })\n\n                        }\n\n                    }\n                }\n            }\n            let i = 0\n            for (let item of items) {\n                if (item.item !== 'grnil3y') {\n                    let tempData = [];\n                    for (let sub of item.days) {\n                        if (sub.deleted===false)\n                            tempData.push({\n                                date: moment(sub.periodEndDay, 'YYYYMMDD').format('YYYY-MM-DD'),\n                                volume: sub.values.value\n                            })\n                    }\n                    data.push({color: colors[i], type: item.item, data: tempData})\n                    i++;\n                }\n            }\n        }\n\n        // let data = [\n        //         {\n        //         color:\"rgb(170, 53, 144)\",\n        //         data:\n        //         [\n        //             {date: '2015-01-01', volume: 120453518},\n        //             {date: '2015-02-01', volume: 137503440},\n        //             {date: '2015-03-01', volume: 158757311},\n        //             {date: '2015-04-01', volume: 130552492},\n        //             {date: '2015-05-01', volume: 182752154},\n        //             {date: '2015-06-01', volume: 144304088},\n        //             {date: '2015-07-01', volume: 135088854},\n        //             {date: '2015-08-01', volume: 158191824},\n        //             {date: '2015-09-01', volume: 124257823},\n        //             {date: '2015-10-01', volume: 115231050},\n        //             {date: '2015-11-01', volume: 138719625},\n        //             {date: '2015-12-01', volume: 111443042},\n        //             {date: '2016-01-01', volume: 179118249},\n        //             {date: '2016-02-01', volume: 161566818},\n        //             {date: '2016-03-01', volume: 147686869},\n        //             {date: '2016-04-01', volume: 151936061},\n        //             {date: '2016-05-01', volume: 211814173},\n        //             {date: '2016-06-01', volume: 154985479},\n        //             {date: '2016-07-01', volume: 176758565},\n        //             {date: '2016-08-01', volume: 139879341},\n        //             {date: '2016-09-01', volume: 136744721},\n        //         ]\n        //     },\n        //     {\n        //         color:\"#80ff80\",\n        //         data:\n        //         [\n        //             {date: '2015-01-01', volume: 12045181},\n        //             {date: '2015-02-01', volume: 13754401},\n        //             {date: '2015-03-01', volume: 15873111},\n        //             {date: '2015-04-01', volume: 13054921},\n        //             {date: '2015-05-01', volume: 18275541},\n        //             {date: '2015-06-01', volume: 14430881},\n        //             {date: '2015-07-01', volume: 13508541},\n        //             {date: '2015-08-01', volume: 15819241},\n        //             {date: '2015-09-01', volume: 12425731},\n        //             {date: '2015-10-01', volume: 11523501},\n        //             {date: '2015-11-01', volume: 13871251},\n        //             {date: '2015-12-01', volume: 11140411},\n        //             {date: '2016-01-01', volume: 17912911},\n        //             {date: '2016-02-01', volume: 16151811},\n        //             {date: '2016-03-01', volume: 14786911},\n        //             {date: '2016-04-01', volume: 15936111},\n        //             {date: '2016-05-01', volume: 21817311},\n        //             {date: '2016-06-01', volume: 15985911},\n        //             {date: '2016-07-01', volume: 17756511},\n        //             {date: '2016-08-01', volume: 13983411},\n        //             {date: '2016-09-01', volume: 13674411},\n        //             {date: '2016-10-01', volume: 13577211},\n        //             {date: '2016-11-01', volume: 87906111},\n        //             {date: '2016-12-01', volume: 12494011},\n        //             {date: '2019-07-01', volume: 17520411},\n        //         ]\n        //     },{\n        //         color:\"#f9f3ff\",\n        //         data:\n        //             [\n        //                 {date: '2015-01-01', volume: 12045181},\n        //                 {date: '2015-02-01', volume: 13754401},\n        //                 {date: '2015-03-01', volume: 15873111},\n        //                 {date: '2015-04-01', volume: 21321321},\n        //                 {date: '2015-05-01', volume: 18275541},\n        //                 {date: '2015-06-01', volume: 144321381},\n        //                 {date: '2015-07-01', volume: 13508541},\n        //                 {date: '2015-08-01', volume: 158193231},\n        //                 {date: '2015-09-01', volume: 124235731},\n        //                 {date: '2015-10-01', volume: 1152350321},\n        //                 {date: '2015-11-01', volume: 13871251},\n        //                 {date: '2015-12-01', volume: 11140411},\n        //                 {date: '2016-01-01', volume: 1791232911},\n        //                 {date: '2016-02-01', volume: 16151811},\n        //                 {date: '2016-03-01', volume: 14786911},\n        //                 {date: '2016-04-01', volume: 15936111},\n        //                 {date: '2016-05-01', volume: 21817311},\n        //                 {date: '2016-06-01', volume: 15985911},\n        //                 {date: '2016-07-01', volume: 17756511},\n        //                 {date: '2016-08-01', volume: 13983411},\n        //                 {date: '2016-09-01', volume: 13674411},\n        //                 {date: '2016-10-01', volume: 13577211},\n        //                 {date: '2016-11-01', volume: 87906111},\n        //                 {date: '2016-12-01', volume: 12494011},\n        //                 {date: '2019-07-01', volume: 17520411},\n        //             ]\n        //     }\n        // ];\n\n        console.log(data)\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        data = data.map((history) => {\n            return {\n                color: history.color,\n                data: history.data.map(\n                    (d) => {\n                        return {\n                            date: parseTime(d.date),\n                            volume: d.volume,\n                        };\n                    }\n                )\n            }\n\n        });\n        let redraw = () => {\n\n            let svg = d3.select(this.getId('chart'));\n\n            svg.empty()\n            svg.selectAll(\"*\").remove();\n            let width = d3.select(this.getId(\"chart-container\")).node().getBoundingClientRect().width\n\n            let height = 500;\n            let heightOfSvg = 520\n            let x = d3.scaleTime().rangeRound([0, width - 100]);\n            let y = d3.scaleLinear().rangeRound([height, 0])\n            let area = d3.area()\n                .x(d => x(d.date))\n                .y1(d => y(d.volume))\n                .y0(height)\n            let line = d3.line()\n                .x(d => x(d.date))\n                .y(d => y(d.volume))\n            svg\n                .attr(\"width\", width - 100)\n                .attr(\"height\", heightOfSvg)\n                .style(\"overflow\", \"\")\n\n            console.log(this.findMin(data, \"date\"))\n            console.log(this.findMax(data, \"date\"))\n            console.log(this.findMax(data, \"volume\"))\n            x.domain([\n                this.findMin(data, \"date\"),\n                this.findMax(data, \"date\")\n            ]);\n\n            y.domain([0, this.findMax(data, \"volume\")]);\n            let xAxis = svg.append('g')\n                .attr(\"class\", \"x axis\")\n                .call(d3.axisBottom(x))\n\n\n            xAxis.selectAll('text')\n                .attr('fill', \"white\")\n\n            xAxis.selectAll('line')\n                .style(\"color\", \"white\")\n\n            xAxis\n                .attr(\"transform\", \"translate(0 \" + height + \")\")\n            data.forEach(history => {\n                    svg\n                        .datum(history.data)\n                        .append(\"path\")\n                        .attr(\"d\", area)\n                        .attr('fill', history.color)\n                        .attr('fill-opacity', 0.05)\n                        .on(\"mouseover\", (d, i, nodes) => {\n                            d3.select(nodes[i])\n                                .attr('fill-opacity', 0.5)\n                        })\n                        .on(\"mouseleave\", (d, i, nodes) => {\n                            d3.select(nodes[i])\n                                .attr('fill-opacity', 0.05)\n\n                        })\n\n                    svg\n                        .append(\"path\")\n                        .datum(history.data)\n                        .attr(\"d\", line)\n                        .attr('stroke', history.color)\n                        .attr('fill', 'none')\n                        .attr('stroke-width', 1.5)\n                    svg.selectAll(\"dot\")\n                        .data(history.data)\n                        .enter()\n                        .append(\"circle\")\n                        .attr(\"r\", 3)\n                        .attr(\"fill\", history.color)\n                        .attr(\"cx\", function (d) {\n                            return x(d.date)\n                        })\n                        .attr(\"cy\", function (d) {\n                            return y(d.volume)\n                        })\n                        .on(\"mouseover\", (d, i, nodes) => {\n\n                            d3.select(this.getId(\"mytooltip\"))\n                                .style(\"opacity\", 1)\n                                .style(\"top\", (d3.event.pageY) + \"px\")\n                                .style(\"left\", (d3.event.pageX) + \"px\")\n\n                            d3.select(this.getId(\"tooltip-text\"))\n                                .text(y.invert(d3.mouse(nodes[i])[1]))\n                        })\n                        .on(\"mouseout\", (d) => {\n                            d3.select(this.getId(\"mytooltip\"))\n                                .transition()\n                                .duration(1000)\n                                .style(\"opacity\", 0);\n                        })\n                }\n            )\n        }\n\n        redraw()\n        window.addEventListener(\"resize\", redraw);\n\n    };\n\n    render() {\n\n        return (\n            <div>\n                <Tooltip id={this.setId(\"mytooltip\")} style={{opacity: 0}}>\n                    <div style={{color: \"white\"}} id={this.setId(\"tooltip-text\")}>\n                    </div>\n                </Tooltip>\n\n                <div className={\"row\"} id={this.setId(\"chart-container\")} style={{placeContent: \"center\"}}>\n                    <svg className={\"svg\"} id={this.setId(\"chart\")}>\n\n                    </svg>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TwoLineGraph;\n","import React from \"react\";\nimport '../scss/react-d3-radar.scss'\nimport * as d3 from 'd3'\nimport {Tooltip} from \"react-bootstrap\";\nimport uuidv from \"uuid/v4\";\nclass RadarDiagramD3 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n    }\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n    setId(id) {\n        return this.id + '-' + id;\n    }\n    componentDidMount() {\n        let showTooltip = (mouse) => {\n            console.log(mouse)//mouse place\n        }\n        let angleToCoordinate = (angle, value) => {\n            let x = Math.cos(angle) * radialScale(value);\n            let y = Math.sin(angle) * radialScale(value)\n            return {\"x\": 150+x, \"y\": 150+y};\n        }\n        let getPathCoordinates = (data_point,features) => {\n            let coordinates = [];\n            for (var i = 0; i < features.length; i++){\n                let ft_name = features[i];\n                let angle = (Math.PI / 2) + (2 * Math.PI * i / features.length);\n                coordinates.push(angleToCoordinate(angle, data_point[ft_name]));\n            }\n            return coordinates;\n        }\n        let data = [\n            {\n                A:4,\n                B:3,\n                C:5,\n                D:1,\n                E:5,\n                F:3,\n                G:4,\n                H:3,\n                I:5,\n                J:1\n            }\n        ]\n        let features = []\n        for (var key in data[0]){\n            features.push(key)\n        }\n        let colors = [\"darkorange\"];\n        let radialScale = d3.scaleLinear()\n            .domain([0,10])\n            .range([0,200]);\n        let ticks = [1,2,3,4,5];//draw circles\n        let line = d3.line()\n            .curve(d3.curveBasisClosed)\n            .x(function(d) { return d.x; })\n            .y(function(d) { return d.y; });\n        let svg = d3.select(this.getId(\"svg\"))\n        ticks.forEach(t =>\n            svg.append(\"circle\")\n                .attr(\"cx\", 150)//center\n                .attr(\"cy\", 150)//center\n                .attr(\"r\", radialScale(t))\n                .attr(\"fill\", function () {\n                    if (t % 2 === 0) {\n                        return \"#2D3642\"\n                    } else {\n                        return \"#424B58\"\n                    }\n                })\n                .attr(\"opacity\",function () {\n                    return 0.2\n                })\n        );\n        for (var i = 0; i < data.length; i ++){\n            let d = data[i];\n            let color = colors[i];\n            let coordinates = getPathCoordinates(d,features);\n            //draw the path element\n            svg.append(\"path\")\n                .datum(coordinates)\n                .attr(\"d\",line)\n                .attr(\"stroke-width\", 3)\n                .attr(\"stroke\", color)\n                .attr(\"fill\", color)\n                .attr(\"stroke-opacity\", 1)\n                .attr(\"opacity\", 0.2)\n                .on(\"mouseover\",function (d, i, nodes) {\n                    showTooltip(d3.mouse(this))\n                    d3.select(nodes[i])\n                        .attr(\"opacity\",0.4)\n                })\n                .on(\"mouseout\",function (d, i, nodes) {\n                    d3.select(nodes[i])\n                        .attr(\"opacity\",0.2)\n                })\n        }\n    }\n    render() {\n        return (\n            <div id={\"svg-container\"}>\n                <Tooltip id={this.setId(\"mytooltip\")} style={{opacity:0}} >\n                    <div style={{color:\"white\"}} id={this.setId(\"tooltip-text\")}>\n                    </div>\n                </Tooltip>\n                <svg id={this.setId(\"svg\")} width={300} height={300}>\n                </svg>\n            </div>\n        )\n    }\n}\nexport default RadarDiagramD3;\n","import React from 'react';\nimport * as d3 from 'd3'\nimport '../scss/one-line-chart.scss'\nimport uuidv from \"uuid/v4\";\n\n// const data = \"{\\\"bpi\\\":{\\\"2017-12-31\\\":13860.1363,\\\"2018-01-01\\\":13412.44,\\\"2018-01-02\\\":14740.7563,\\\"2018-01-03\\\":15134.6513,\\\"2018-01-04\\\":15155.2263,\\\"2018-01-05\\\":16937.1738,\\\"2018-01-06\\\":17135.8363,\\\"2018-01-07\\\":16178.495,\\\"2018-01-08\\\":14970.3575,\\\"2018-01-09\\\":14439.4738,\\\"2018-01-10\\\":14890.7225,\\\"2018-01-11\\\":13287.26,\\\"2018-01-12\\\":13812.715,\\\"2018-01-13\\\":14188.785,\\\"2018-01-14\\\":13619.0288,\\\"2018-01-15\\\":13585.9013,\\\"2018-01-16\\\":11348.02,\\\"2018-01-17\\\":11141.2488,\\\"2018-01-18\\\":11250.6475,\\\"2018-01-19\\\":11514.925,\\\"2018-01-20\\\":12759.6413,\\\"2018-01-21\\\":11522.8588,\\\"2018-01-22\\\":10772.15,\\\"2018-01-23\\\":10839.8263,\\\"2018-01-24\\\":11399.52,\\\"2018-01-25\\\":11137.2375,\\\"2018-01-26\\\":11090.0638,\\\"2018-01-27\\\":11407.1538,\\\"2018-01-28\\\":11694.4675,\\\"2018-01-29\\\":11158.3938,\\\"2018-01-30\\\":10034.9975,\\\"2018-01-31\\\":10166.5063,\\\"2018-02-01\\\":9052.5763,\\\"2018-02-02\\\":8827.63,\\\"2018-02-03\\\":9224.3913,\\\"2018-02-04\\\":8186.6488,\\\"2018-02-05\\\":6914.26,\\\"2018-02-06\\\":7700.3863,\\\"2018-02-07\\\":7581.8038,\\\"2018-02-08\\\":8237.2363,\\\"2018-02-09\\\":8689.8388,\\\"2018-02-10\\\":8556.6125,\\\"2018-02-11\\\":8070.7963,\\\"2018-02-12\\\":8891.2125,\\\"2018-02-13\\\":8516.2438,\\\"2018-02-14\\\":9477.84,\\\"2018-02-15\\\":10016.4888,\\\"2018-02-16\\\":10178.7125,\\\"2018-02-17\\\":11092.1475,\\\"2018-02-18\\\":10396.63,\\\"2018-02-19\\\":11159.7238,\\\"2018-02-20\\\":11228.2413,\\\"2018-02-21\\\":10456.1725,\\\"2018-02-22\\\":9830.4263,\\\"2018-02-23\\\":10149.4625,\\\"2018-02-24\\\":9682.3825,\\\"2018-02-25\\\":9586.46,\\\"2018-02-26\\\":10313.0825,\\\"2018-02-27\\\":10564.4188,\\\"2018-02-28\\\":10309.6413,\\\"2018-03-01\\\":10907.59,\\\"2018-03-02\\\":11019.5213,\\\"2018-03-03\\\":11438.6513,\\\"2018-03-04\\\":11479.7313,\\\"2018-03-05\\\":11432.9825,\\\"2018-03-06\\\":10709.5275,\\\"2018-03-07\\\":9906.8,\\\"2018-03-08\\\":9299.2838,\\\"2018-03-09\\\":9237.05,\\\"2018-03-10\\\":8787.1638,\\\"2018-03-11\\\":9532.7413,\\\"2018-03-12\\\":9118.2713,\\\"2018-03-13\\\":9144.1475,\\\"2018-03-14\\\":8196.8975,\\\"2018-03-15\\\":8256.9938,\\\"2018-03-16\\\":8269.3275,\\\"2018-03-17\\\":7862.1088,\\\"2018-03-18\\\":8196.0225,\\\"2018-03-19\\\":8594.1913,\\\"2018-03-20\\\":8915.9038,\\\"2018-03-21\\\":8895.4,\\\"2018-03-22\\\":8712.8913,\\\"2018-03-23\\\":8918.7438,\\\"2018-03-24\\\":8535.8938,\\\"2018-03-25\\\":8449.835,\\\"2018-03-26\\\":8138.3363,\\\"2018-03-27\\\":7790.1575,\\\"2018-03-28\\\":7937.205,\\\"2018-03-29\\\":7086.4875,\\\"2018-03-30\\\":6844.3213,\\\"2018-03-31\\\":6926.0175,\\\"2018-04-01\\\":6816.74},\\\"disclaimer\\\":\\\"This data was produced from the CoinDesk Bitcoin Price Index. BPI value data returned as USD.\\\",\\\"time\\\":{\\\"updated\\\":\\\"Apr 2, 2018 00:03:00 UTC\\\",\\\"updatedISO\\\":\\\"2018-04-02T00:03:00+00:00\\\"}}\"\n// const state = JSON.parse(data)\n\nclass OneLineChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n\n\n    }\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n\n    componentDidMount() {\n        // let width = d3.select(this.getId(\"svg-container\")).node().getBoundingClientRect().width\n        let width = 330\n        let endRectHeight = 8\n        let middleRectHeight = 40\n        let widthRectData = 50\n        let heightRectData = 30\n        let lineY = 100\n        let svg = d3.select(this.getId(\"svg\"))\n            .attr(\"width\",width)\n            .attr(\"height\",200)\n        let linearGradient = svg.append(\"linearGradient\")\n            .attr(\"id\",this.setId(\"BarGradient\"))\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\",\"0%\")\n            .attr(\"stop-color\",\"#51b777\")\n        linearGradient.append(\"stop\")\n            .attr(\"offset\",\"50%\")\n            .attr(\"stop-color\",\"#ffd238\")\n\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\",\"100%\")\n            .attr(\"stop-color\",\"#c3381f\")\n\n        //start rect\n        svg.append(\"rect\")\n            .attr(\"fill\",\"#ffffff\")\n            .attr(\"x\",0)\n            .attr(\"y\",function () {\n                return lineY - endRectHeight / 2 + 1\n            })\n            .attr(\"width\", 2)\n            .attr(\"height\", endRectHeight)\n\n        svg.append(\"text\")\n            .attr(\"fill\" , \"#FFFFFF\")\n            .attr(\"x\" , -2)\n            .attr(\"y\",function () {\n                return lineY + endRectHeight / 2\n            })\n            .attr(\"transform\",function () {\n                let margin_right = -3\n                return \"translate(\" +margin_right+\",0)\"\n            })\n            .append(\"tspan\")\n            .text(\"start\")\n        //end rect\n        svg.append(\"rect\")\n            .attr(\"fill\",\"#ffffff\")\n            .attr(\"x\",width)\n            .attr(\"y\",function () {\n                return lineY - endRectHeight / 2 + 1\n            })\n            .attr(\"width\", 2)\n            .attr(\"height\", endRectHeight)\n\n        svg.append(\"text\")\n            .attr(\"fill\" , \"#FFFFFF\")\n            .attr(\"text-anchor\" , \"end\")\n            .attr(\"x\" , width)\n            .attr(\"y\",function () {\n                return lineY + endRectHeight / 2\n            })\n            .attr(\"transform\",function () {\n                let margin_right = 5\n                return \"translate(\" +margin_right+\",0)\"\n            })\n            .append(\"tspan\")\n            .text(\"end\")\n        //rect middle\n        svg.append(\"rect\")\n            .attr(\"fill\",\"#ffffff\")\n            .attr(\"x\",width / 2)\n            .attr(\"y\",function () {\n                return lineY + 5\n            })\n            .attr(\"width\", 2)\n            .attr(\"height\", middleRectHeight)\n\n        svg.append(\"text\")\n            .attr(\"fill\" , \"#FFFFFF\")\n            .attr(\"text-anchor\" , \"middle\")\n            .attr(\"x\" , width/2)\n            .attr(\"y\",function () {\n                return lineY + middleRectHeight + 20\n            })\n            .attr(\"transform\",function () {\n                let margin_right = 0\n                return \"translate(\" +margin_right+\",0)\"\n            })\n            .append(\"tspan\")\n            .text(\"middle\")\n\n\n\n        svg.append(\"rect\")\n            .attr(\"x\",0)\n            .attr(\"y\",lineY)\n            .attr(\"height\",2)\n            .attr(\"width\",width)\n            .style(\"fill\",\"url(\"+this.getId(\"BarGradient\")+\")\")\n            .style(\"stroke-width\",2)\n\n        //data 1\n\n        let data1_g = svg.append(\"g\")\n            .attr(\"transform\",function () {\n                let translateX = width * 10 / 100\n                let margin_bottom = 10\n                let translateY = lineY - margin_bottom\n                return \"translate(\"+translateX+\",\"+translateY+\")\"\n            })\n        data1_g\n            .append(\"rect\")\n            .attr(\"fill\",\"#51b777\")\n            .attr(\"rx\",5)\n            .attr(\"x\",0)\n            .attr(\"y\",function () {\n                return -1 * heightRectData\n            })\n            .attr(\"width\",function () {\n                return widthRectData\n            })\n            .attr(\"height\",heightRectData)\n\n\n        data1_g\n            .append(\"text\")\n            .attr(\"text-anchor\",\"middle\")\n            .attr(\"fill\",\"white\")\n            .attr(\"x\",function () {\n                return widthRectData / 2\n            })\n            .attr(\"y\",function () {\n                return -1 * heightRectData / 2 + 5\n            })\n            .append(\"tspan\")\n            .text(\"data 1\")\n\n        // data 2\n        let data2_g = svg.append(\"g\")\n            .attr(\"transform\",function () {\n                let translateX = width * 80 / 100\n                let margin_bottom = 10\n                let translateY = lineY - margin_bottom\n                return \"translate(\"+translateX+\",\"+translateY+\")\"\n            })\n        data2_g\n            .append(\"rect\")\n            .attr(\"rx\",5)\n            .attr(\"fill\",\"#c37825\")\n            .attr(\"x\",0)\n            .attr(\"y\",function () {\n                return -1 * heightRectData\n            })\n            .attr(\"width\",function () {\n                return widthRectData\n            })\n            .attr(\"height\",heightRectData)\n\n\n        data2_g\n            .append(\"text\")\n            .attr(\"text-anchor\",\"middle\")\n            .attr(\"fill\",\"white\")\n            .attr(\"x\",function () {\n                return widthRectData / 2\n            })\n            .attr(\"y\",function () {\n                return -1 * heightRectData / 2 + 5\n            })\n            .append(\"tspan\")\n            .text(\"data 2\")\n    };\n\n    render() {\n        return (\n            <div id={this.setId(\"svg-container\")} align={\"center\"}>\n                <svg id={this.setId(\"svg\")} className={\"svg\"}>\n\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default OneLineChart;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport \"../scss/bar-chart-d3-horizontal.scss\"\nimport uuidv from \"uuid/v4\";\nclass BarChartD3Horizontal extends React.Component{\n    constructor(props){\n        super(props)\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n\n\n    }\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n\n    build() {\n        let width = d3.select(this.getId(\"svg-container\")).node().getBoundingClientRect().width;\n        let data = [\n            {value: 8,name:\"نمونه اول\"},\n            {value: 13,name:\"نمونه دوم\"}\n        ];\n        let height = 216;\n        let bar_height = 72;\n        let margin = {\n            bottom:40,\n            top:40,\n            right:20,\n            left:20\n        }\n        let scale_factor = width/21;\n        let margin_bar = 24\n        let svg = d3.select(this.getId(\"svg\"))\n            .attr(\"width\", width)\n            .attr(\"height\", height + margin.bottom)\n            .attr(\"transform\",\"translate(0,\"+margin.top+\")\")\n        svg.empty()\n        svg.selectAll(\"*\").remove();\n        let linearGradient = svg.append(\"linearGradient\")\n            .attr(\"id\",this.setId(\"BarGradient\"))\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\",\"0%\")\n            .attr(\"stop-color\",\"rgb(21, 27, 36)\")\n            .attr(\"stop-opacity\",\"0.5\")\n\n        linearGradient.append(\"stop\")\n            .attr(\"offset\",\"100%\")\n            .attr(\"stop-color\",\"rgb(21, 27, 36)\")\n            .attr(\"stop-opacity\",\"0.8\")\n\n\n        svg.append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"fill\", \"#E64141\")\n\n        svg.append(\"text\")\n            .text(\"قرمز\")\n            .attr(\"fill\",\"#E64141\")\n            .attr(\"transform\", function (d, i) {\n                let traslateY = height + 10\n                return \"translate(\" + width + \", \"+ traslateY + \") rotate(315)\"\n            })\n        svg.append(\"rect\")\n            .attr(\"width\", width * 0.64)\n            .attr(\"height\", height)\n            .attr(\"fill\", \"#FFC701\")\n\n        svg.append(\"text\")\n            .text(\"زرد\")\n            .attr(\"fill\",\"#FFC701\")\n            .attr(\"transform\", function (d, i) {\n                let traslateY = height + 10\n                return \"translate(\" + width*0.64 + \", \"+ traslateY + \") rotate(315)\"\n            })\n\n        svg.append(\"rect\")\n            .attr(\"width\", width * 0.45)\n            .attr(\"height\", height)\n            .attr(\"fill\", \"#2BD784\")\n        svg.append(\"text\")\n            .text(\"سبز\")\n            .attr(\"fill\",\"#2BD784\")\n            .attr(\"transform\", function (d, i) {\n                let traslateY = height + 10\n                return \"translate(\" + width*0.45+ \", \"+ traslateY + \") rotate(315)\"\n            })\n\n        let bar = svg.selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .attr(\"transform\", function (d, i) {\n                let translate = (i * bar_height ) + margin_bar*(i+1)\n                return \"translate(0,\" + translate + \")\"\n            })\n\n\n        bar.append(\"rect\")\n            .attr(\"width\", function (d) {\n                return d.value * scale_factor;\n            })\n            .attr(\"height\", bar_height - 1)\n            .attr(\"fill\", \"url(\"+this.getId(\"BarGradient\")+\")\")\n\n        //end-line-bar\n        bar.append(\"line\")\n            .attr(\"x1\",function (d,i) {\n                return d.value * scale_factor;\n            })\n            .attr(\"y1\",function (d,i) {\n                console.log(\"i\",i)\n                return  0\n            })\n            .attr(\"x2\",function (d,i) {\n                return d.value * scale_factor;\n            })\n\n            .attr(\"y2\",function (d,i) {\n                return bar_height\n            })\n            .attr(\"class\",\"endline-bar\")\n\n        bar.append(\"text\")\n            .text(function (d,i) {\n                return d.name;\n            })\n            .attr(\"class\",\"label-name\")\n            .attr(\"transform\", function (d, i) {\n\n                let translateX = d.value*scale_factor - 10\n                return \"translate(\"+ translateX +\",\" + bar_height/3 + \")\"\n            })\n        bar.append(\"text\")\n            .text(function (d,i) {\n                return \"$\" + d.value;\n            })\n            .attr(\"class\",\"label-value\")\n\n            .attr(\"transform\", function (d, i) {\n                let translateX = d.value*scale_factor - 10\n                return \"translate(\"+ translateX +\",\" + bar_height*2/3 + \")\"\n            })\n\n        //Difference line\n        svg.append(\"rect\")\n            .attr(\"width\",function () {\n                return Math.abs(data[0].value - data[1].value) * scale_factor\n            })\n            .attr(\"fill\",\"#2BD784\")\n            .attr(\"height\",1)\n            .attr(\"transform\", function () {\n                let translateX = Math.min(data[0].value,data[1].value) * scale_factor\n                let translateY = -10\n                return \"translate(\"+ translateX +\",\" + translateY + \")\"\n            })\n        svg.append(\"line\")\n            .attr(\"x1\",function () {\n                return Math.min(data[0].value,data[1].value) * scale_factor\n            })\n            .attr(\"y1\",-10) // margin top\n            .attr(\"x2\",function () {\n                return Math.min(data[0].value,data[1].value) * scale_factor\n            })\n            .attr(\"y2\",margin_bar)\n            .attr(\"class\",\"difference-line-to-bar\")\n        svg.append(\"line\")\n            .attr(\"x1\",function () {\n                return Math.max(data[0].value,data[1].value) * scale_factor\n            })\n            .attr(\"y1\",-10) // margin top\n            .attr(\"x2\",function () {\n                return Math.max(data[0].value,data[1].value) * scale_factor\n            })\n            .attr(\"y2\",margin_bar*2+bar_height)\n            .attr(\"class\",\"difference-line-to-bar\")\n\n        svg.append(\"text\")\n            .text(function () {\n                return \"$\" + Math.abs(data[0].value-data[1].value)\n            })\n            .attr(\"transform\", function () {\n                let translateX = Math.min(data[0].value,data[1].value) * scale_factor\n                translateX = translateX + 15 //margin left\n                let translateY = -15\n                return \"translate(\"+ translateX +\",\" + translateY + \")\"\n            })\n            .attr(\"class\",\"difference-text\")\n    }\n\n    componentDidMount() {\n        this.build()\n        d3.select(window).on(\"resize\",() => {\n            this.build()\n        })\n    }\n    render() {\n        return(\n            <div className={\"row svg-container\"} id={this.setId(\"svg-container\")} >\n\n                <svg id={this.setId(\"svg\")} className={'svg'}>\n\n                </svg>\n            </div>\n        )\n    }\n}\nexport default BarChartD3Horizontal","import React from \"react\";\nimport GaugeChart from 'react-gauge-chart'\nimport * as d3 from 'd3'\n\nclass GaugeDiagram extends React.Component{\n    componentDidMount() {\n        d3.select(\"#gauge-chart5\")\n            .attr('width',100)\n    }\n\n    render() {\n        return(\n            <div align={\"center\"}>\n                <GaugeChart id=\"gauge-chart5\"\n                  style={{width:'100%'}}\n                  animate={true}\n                  arcsLength={[0.3, 0.5, 0.2]}\n                  colors={['rgb(43, 215, 132)', '#f5f018', 'rgb(230,65,65)',]}\n                  arcPadding={0.01}\n                />\n            </div>\n\n        )\n    }\n}\nexport default GaugeDiagram\n","/*\n    this component must change with correct formula\n*/\nimport React from \"react\";\nimport uuidv from \"uuid/v4\";\nimport * as d3 from \"d3\";\nimport {Tooltip} from \"react-bootstrap\";\nclass RectangleD3 extends React.Component {\n    constructor() {\n        super()\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n    }\n\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n    build() {\n        let rectMouseOver = (d, i, nodes ) => {\n            let node = d3.select(nodes[i])\n            node\n                .attr(\"opacity\",0.8)\n\n\n        }\n\n        let rectMouseLeave= (d, i, nodes) => {\n\n            console.log(\"mouse leave\")\n            d3.select(nodes[i])\n                .attr(\"opacity\", 1)\n\n            d3.select(this.getId(\"mytooltip\"))\n                .style(\"display\", \"none\")\n\n        }\n\n        let width = 360;\n        let height = 300;\n        let svg = d3.select(this.getId(\"svg\"))\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n\n        svg.append(\"rect\")\n            .attr(\"x\",0)\n            .attr(\"y\",0)\n            .attr(\"width\",width/2)\n            .attr(\"height\",height)\n            .attr(\"fill\",\"rgb(43, 215, 132)\")\n            .on(\"mouseover\",function (d,i,nodes) {\n\n                rectMouseOver(d,i,nodes)\n            })\n            .on(\"mouseleave\",function (d,i,nodes) {\n                rectMouseLeave(d,i,nodes)\n            })\n        svg.append(\"g\")\n            .attr(\"transform\",function () {\n                let tranlateX = (width/2)/2\n                let tranlateY = height/2\n\n                return \"translate(\"+tranlateX+\",\"+tranlateY+\")\"\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .append(\"tspan\")\n            .text(\"example 1\")\n\n\n\n\n        svg.append(\"rect\")\n            .attr(\"x\",width/2 + 1)\n            .attr(\"y\",0)\n            .attr(\"width\",function () {\n                return 5*width/4 - width\n            })\n            .attr(\"height\",function () {\n                return height * 3 / 4\n            })\n            .attr(\"fill\",\"rgb(43, 215, 132)\")\n            .on(\"mouseover\",function (d,i,nodes) {\n\n                rectMouseOver(d,i,nodes)\n            })\n            .on(\"mouseleave\",function (d,i,nodes) {\n                rectMouseLeave(d,i,nodes)\n            })\n        svg.append(\"g\")\n            .attr(\"transform\",function () {\n                let translateX = ((width/2+1) + (width/2+1) + (5*width/4-width))/2\n                let translateY = height*3/4/2\n                return \"translate(\"+ translateX +\",\"+ translateY +\")\"\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .append(\"tspan\")\n            .text(\"example 2\")\n\n\n        svg.append(\"rect\")\n            .attr(\"x\",function () {\n                return 3*width/4 + 2\n            })\n            .attr(\"y\",0)\n            .attr(\"width\",function () {\n                return width/4\n            })\n\n            .attr(\"height\",function () {\n                return height * 3 / 4\n            })\n            .attr(\"fill\",\"rgb(43, 215, 132)\")\n            .on(\"mouseover\",function (d,i,nodes) {\n\n                rectMouseOver(d,i,nodes)\n            })\n            .on(\"mouseleave\",function (d,i,nodes) {\n                rectMouseLeave(d,i,nodes)\n            })\n        svg.append(\"g\")\n            .attr(\"transform\",function () {\n\n                let translateX = ((3*width/4 + 2) + (3*width/4 + 2) + (width/4))/2\n                let translateY = height*3/4/2\n                return \"translate(\"+ translateX +\",\"+ translateY+\")\"\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .append(\"tspan\")\n            .text(\"example 3\")\n\n        svg.append(\"rect\")\n            .attr(\"x\",function () {\n                return width/2 + 1\n            })\n            .attr(\"y\",function () {\n                return height * 3 / 4 + 1\n            })\n            .attr(\"width\",function () {\n                return width/2\n            })\n\n            .attr(\"height\",function () {\n                return height / 4\n            })\n            .attr(\"fill\",\"rgb(230,65,65)\")\n            .on(\"mouseover\",function (d,i,nodes) {\n                rectMouseOver(d,i,nodes)\n            })\n            .on(\"mouseleave\",function (d,i,nodes) {\n                rectMouseLeave(d,i,nodes)\n            })\n        svg.append(\"g\")\n            .attr(\"transform\",function () {\n                let translateX = ((width/2 + 1) + (width/2 + 1) + (width/2))/2\n                let translateY = ((height * 3 / 4 + 1) + ((height * 3 / 4 + 1)+height/4 + 1)) / 2\n\n                return \"translate(\"+ translateX +\",\"+ translateY +\")\"\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .append(\"tspan\")\n            .text(\"example 4\")\n\n\n\n    }\n\n    componentDidMount() {\n        this.build()\n    }\n\n    render() {\n        return (\n            <div id={this.setId(\"svg-container\")} align={\"center\"}>\n                <Tooltip id={this.setId(\"mytooltip\")} style={{opacity:0}} >\n                    <div style={{color:\"white\"}} id={this.setId(\"tooltip-text\")}>\n                    </div>\n                </Tooltip>\n                <svg id={this.setId(\"svg\")} className={\"svg\"}>\n\n                </svg>\n\n            </div>\n        );\n    }\n}\n\nexport default RectangleD3\n","import React from \"react\";\n\nclass Star extends React.Component {\n\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <div>\n                <img width={\"18\"}\n                    height={\"18\"}\n                    src={'https://cdn3.iconfinder.com/data/icons/stars-5/512/green_eko_star-512.png'} alt={''}\n                />\n                <small style={{color:\"white\"}}>\n                    {this.props.reward}\n                </small>\n            </div>\n        )\n    }\n}\n\nexport default Star;\n","import React from 'react';\nimport * as d3 from 'd3'\nimport '../scss/line-graph-d3.scss'\nimport {Tooltip} from \"react-bootstrap\";\nimport uuidv from \"uuid/v4\";\n\n// const data = \"{\\\"bpi\\\":{\\\"2017-12-31\\\":13860.1363,\\\"2018-01-01\\\":13412.44,\\\"2018-01-02\\\":14740.7563,\\\"2018-01-03\\\":15134.6513,\\\"2018-01-04\\\":15155.2263,\\\"2018-01-05\\\":16937.1738,\\\"2018-01-06\\\":17135.8363,\\\"2018-01-07\\\":16178.495,\\\"2018-01-08\\\":14970.3575,\\\"2018-01-09\\\":14439.4738,\\\"2018-01-10\\\":14890.7225,\\\"2018-01-11\\\":13287.26,\\\"2018-01-12\\\":13812.715,\\\"2018-01-13\\\":14188.785,\\\"2018-01-14\\\":13619.0288,\\\"2018-01-15\\\":13585.9013,\\\"2018-01-16\\\":11348.02,\\\"2018-01-17\\\":11141.2488,\\\"2018-01-18\\\":11250.6475,\\\"2018-01-19\\\":11514.925,\\\"2018-01-20\\\":12759.6413,\\\"2018-01-21\\\":11522.8588,\\\"2018-01-22\\\":10772.15,\\\"2018-01-23\\\":10839.8263,\\\"2018-01-24\\\":11399.52,\\\"2018-01-25\\\":11137.2375,\\\"2018-01-26\\\":11090.0638,\\\"2018-01-27\\\":11407.1538,\\\"2018-01-28\\\":11694.4675,\\\"2018-01-29\\\":11158.3938,\\\"2018-01-30\\\":10034.9975,\\\"2018-01-31\\\":10166.5063,\\\"2018-02-01\\\":9052.5763,\\\"2018-02-02\\\":8827.63,\\\"2018-02-03\\\":9224.3913,\\\"2018-02-04\\\":8186.6488,\\\"2018-02-05\\\":6914.26,\\\"2018-02-06\\\":7700.3863,\\\"2018-02-07\\\":7581.8038,\\\"2018-02-08\\\":8237.2363,\\\"2018-02-09\\\":8689.8388,\\\"2018-02-10\\\":8556.6125,\\\"2018-02-11\\\":8070.7963,\\\"2018-02-12\\\":8891.2125,\\\"2018-02-13\\\":8516.2438,\\\"2018-02-14\\\":9477.84,\\\"2018-02-15\\\":10016.4888,\\\"2018-02-16\\\":10178.7125,\\\"2018-02-17\\\":11092.1475,\\\"2018-02-18\\\":10396.63,\\\"2018-02-19\\\":11159.7238,\\\"2018-02-20\\\":11228.2413,\\\"2018-02-21\\\":10456.1725,\\\"2018-02-22\\\":9830.4263,\\\"2018-02-23\\\":10149.4625,\\\"2018-02-24\\\":9682.3825,\\\"2018-02-25\\\":9586.46,\\\"2018-02-26\\\":10313.0825,\\\"2018-02-27\\\":10564.4188,\\\"2018-02-28\\\":10309.6413,\\\"2018-03-01\\\":10907.59,\\\"2018-03-02\\\":11019.5213,\\\"2018-03-03\\\":11438.6513,\\\"2018-03-04\\\":11479.7313,\\\"2018-03-05\\\":11432.9825,\\\"2018-03-06\\\":10709.5275,\\\"2018-03-07\\\":9906.8,\\\"2018-03-08\\\":9299.2838,\\\"2018-03-09\\\":9237.05,\\\"2018-03-10\\\":8787.1638,\\\"2018-03-11\\\":9532.7413,\\\"2018-03-12\\\":9118.2713,\\\"2018-03-13\\\":9144.1475,\\\"2018-03-14\\\":8196.8975,\\\"2018-03-15\\\":8256.9938,\\\"2018-03-16\\\":8269.3275,\\\"2018-03-17\\\":7862.1088,\\\"2018-03-18\\\":8196.0225,\\\"2018-03-19\\\":8594.1913,\\\"2018-03-20\\\":8915.9038,\\\"2018-03-21\\\":8895.4,\\\"2018-03-22\\\":8712.8913,\\\"2018-03-23\\\":8918.7438,\\\"2018-03-24\\\":8535.8938,\\\"2018-03-25\\\":8449.835,\\\"2018-03-26\\\":8138.3363,\\\"2018-03-27\\\":7790.1575,\\\"2018-03-28\\\":7937.205,\\\"2018-03-29\\\":7086.4875,\\\"2018-03-30\\\":6844.3213,\\\"2018-03-31\\\":6926.0175,\\\"2018-04-01\\\":6816.74},\\\"disclaimer\\\":\\\"This data was produced from the CoinDesk Bitcoin Price Index. BPI value data returned as USD.\\\",\\\"time\\\":{\\\"updated\\\":\\\"Apr 2, 2018 00:03:00 UTC\\\",\\\"updatedISO\\\":\\\"2018-04-02T00:03:00+00:00\\\"}}\"\n// const state = JSON.parse(data)\n\nclass LineGraphd3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n\n\n    }\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n\n    componentDidMount() {\n\n        let history = [\n            {date: 1, volume: 120453518},\n            {date: 2, volume: 137503440},\n            {date: 3, volume: 158757311},\n            {date: 4, volume: 130552492},\n            {date: 5, volume: 182752154},\n            {date: 6, volume: 144304088},\n            {date: 7, volume: 135088854},\n            {date: 8, volume: 158191824},\n            {date: 9, volume: 124257823},\n            {date: 10, volume: 115231050},\n            {date: 11, volume: 138719625},\n            {date: 12, volume: 111443042},\n            {date: 13, volume: 179118249},\n            {date: 14, volume: 161566818},\n            {date: 15, volume: 147686869},\n            {date: 16, volume: 151936061},\n            {date: 17, volume: 211814173},\n            {date: 18, volume: 154985479},\n            {date: 19, volume: 176758565},\n            {date: 20,volume: 139879341},\n            {date: 21, volume: 136744721},\n            {date: 22, volume: 135775521},\n            {date: 23, volume: 97906206},\n            {date: 24, volume: 124987140},\n            {date: 25, volume: 201461887},\n            {date: 26, volume: 178173517},\n            {date: 27, volume: 135677135},\n            {date: 28, volume: 185292137},\n            {date: 29, volume: 160638753},\n            {date: 30, volume: 155101164},\n            {date: 31, volume: 179955080},\n            {date: 32, volume: 128238409},\n            {date: 33, volume: 107595048},\n            {date: 34, volume: 136697530},\n            {date: 35, volume: 122366787},\n            {date: 37, volume: 173496117},\n            {date: 38, volume: 162729515},\n            {date: 39, volume: 188381335},\n            {date: 40, volume: 172521404},\n            {date: 40.1, volume: 173524464},\n            {date: 40.4, volume: 176524464},\n            {date: 40.7, volume: 179524464},\n            {date: 40.9, volume: 183524464},\n\n            {date: 41, volume: 188381335},\n            {date: 42, volume: 172521404},\n        ];\n\n\n\n\n\n\n        let redraw = () => {\n            let svg = d3.select(this.getId('chart'));\n\n            svg.empty()\n            svg.selectAll(\"*\").remove();\n            let width = d3.select(this.getId(\"chart-container\")).node().getBoundingClientRect().width\n\n            let height = 500 ;\n            // let heightOfSvg = 520\n            let x = d3.scaleTime().rangeRound([0, width-100]);\n            let y =  d3.scaleLinear().rangeRound([height, 0])\n            let area = d3.area()\n                .x(d =>  x(d.date) )\n                .y1(d =>  y(d.volume))\n                .y0(height)\n            let line = d3.line()\n                .x(d =>  x(d.date) )\n                .y(d =>  y(d.volume))\n            width = d3.select(this.getId(\"chart-container\")).node().getBoundingClientRect().width\n\n            svg\n                .attr(\"width\", width - 100)\n                .attr(\"height\", height + 20)\n                .style(\"overflow\", \"\")\n\n\n            x = d3.scaleLinear().rangeRound([0, width - 100]);\n\n\n            x.domain([\n                d3.min(history, d => d.date),\n                d3.max(history, d => d.date),\n            ]);\n\n            y.domain([0, d3.max(history, d => d.volume)]);\n            let xAxis = svg.append('g')\n                .attr(\"class\", \"x axis\")\n                .call(d3.axisBottom(x))\n\n\n            xAxis.selectAll('text')\n                .attr('fill', \"white\")\n\n            xAxis.selectAll('line')\n                .style(\"color\", \"white\")\n\n\n            xAxis\n                .attr(\"transform\", \"translate(0 \" + height + \")\")\n\n            svg\n                .datum(history)\n                .append(\"path\")\n                .attr(\"d\", area)\n                .attr('fill', 'steelblue')\n                .attr('fill-opacity', 0.1)\n            if(this.props.line === true) {\n                svg\n                    .append(\"path\")\n                    .datum(history)\n                    .attr(\"d\", line)\n                    .attr('stroke', '#0D6EF1')\n                    .attr('fill', 'none')\n                    .attr('stroke-width', 1.5)\n            }\n            svg.selectAll(\"dot\")\n                .data(history)\n                .enter()\n                .append(\"circle\")\n                .attr(\"r\",2)\n                .attr(\"fill\",\"#0D6EF1\")\n                .attr(\"cx\",function (d) {\n                    return x(d.date)\n                })\n                .attr(\"cy\",function (d) {\n                    return y(d.volume)\n                })\n                .on(\"mouseover\", (d, i, nodes) => {\n\n                    d3.select(this.getId(\"mytooltip\"))\n                        .style(\"opacity\", 1)\n                        .style(\"top\", (d3.event.pageY) + \"px\")\n                        .style(\"left\", (d3.event.pageX) + \"px\")\n\n                    d3.select(this.getId(\"tooltip-text\"))\n                        .text(y.invert(d3.mouse(nodes[i])[1]))\n                })\n                .on(\"mouseout\", (d) => {\n                    d3.select(this.getId(\"mytooltip\"))\n                        .transition()\n                        .duration(1000)\n                        .style(\"opacity\", 0);\n                })\n\n\n        }\n\n        redraw()\n        window.addEventListener(\"resize\", redraw);\n\n    };\n\n    render() {\n        return (\n        <div>\n            <Tooltip id={this.setId(\"mytooltip\")} style={{opacity:0}} >\n                <div style={{color:\"white\"}} id={this.setId(\"tooltip-text\")}>\n                </div>\n            </Tooltip>\n\n            <div className={\"row\"} id={this.setId(\"chart-container\")} style={{placeContent:\"center\"}}>\n                <svg className={\"svg\"} id={this.setId(\"chart\")}>\n\n                </svg>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default LineGraphd3;\n","import React from 'react'\nimport RadarDiagramD3 from \"../Charts/RadarDiagramD3\";\nimport '../scss/bootstrap-rtl.scss'\nimport '../scss/information.scss'\nimport Star from \"../Charts/Star\";\nimport LineGraphd3 from \"../Charts/LineGraphd3\";\nimport OneLineChart from \"../Charts/OneLineChart\";\nimport BarChartD3Horizontal from \"../Charts/BarChartD3Horizontal\";\nimport BarChartD3 from \"../Charts/BarChartD3\";\nimport GaugeDiagram from \"../Charts/GaugeChart\";\nimport TwoLineGraph from \"../Charts/TwoLineGraph\";\nimport RectangleD3 from \"../Charts/RectangleD3\";\nclass Information extends React.Component{\n    render(){\n        return(\n            <div className={'container'}>\n                <div className={'row part'}>\n                    <div className={'col-lg-8 col-md-8 col-sm-12-col-xs-12 radar-title'}>\n\n                        <h2>\n                            نمودار رادار\n                        </h2>\n                        <p>\n                            این نمودار جنبه تستی دارد\n                        </p>\n                        <h4>\n                            جوایز\n                        </h4>\n                        <div>\n                            <Star reward={\"جایزه اول\"}/>\n                            <Star reward={\"جایزه دوم\"}/>\n                            <Star reward={\"جایزه سوم\"}/>\n                        </div>\n                    </div>\n                    <div className={'col-lg-4 col-md-4 col-sm-12-col-xs-12 radar-diagram-container'}>\n                        <RadarDiagramD3 />\n                    </div>\n\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار نقطه ای\n                        </h2>\n                    </div>\n                    <LineGraphd3/>\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار خطی\n                        </h2>\n                    </div>\n                    <LineGraphd3 line={true}/>\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار مکمل\n                        </h2>\n                    </div>\n                    <TwoLineGraph/>\n\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار میله ای افقی\n                        </h2>\n                    </div>\n                    <BarChartD3Horizontal/>\n\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار میله ای عمودی\n                        </h2>\n                    </div>\n\n                    <div className={\"row\"}>\n                        <div className={\"col-lg-6 col-md-12 col-sm-12 col-xs-12\"}>\n                            <BarChartD3/>\n                            <div align={\"center\"} className={'bar-chart-name'}>\n                                نمودار اول\n                            </div>\n                        </div>\n\n                        <div className={\"col-lg-6 col-md-12 col-sm-12 col-xs-12\"}>\n                            <BarChartD3/>\n                            <div align={\"center\"} className={'bar-chart-name'}>\n                                نمودار دوم\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار کاشی\n                        </h2>\n                    </div>\n\n                    <div className={\"row\"}>\n                        <div className={\"col-lg-6 col-md-12 col-sm-12 col-xs-12\"}>\n                            <RectangleD3/>\n                            <div align={\"center\"} className={'bar-chart-name'}>\n                                نمودار اول\n                            </div>\n                        </div>\n\n                        <div className={\"col-lg-6 col-md-12 col-sm-12 col-xs-12\"}>\n                            <RectangleD3/>\n                            <div align={\"center\"} className={'bar-chart-name'}>\n                                نمودار دوم\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار حرارتی\n                        </h2>\n                    </div>\n\n                    <OneLineChart/>\n                </div>\n                <div className={\"part\"}>\n                    <div className={\"row col-12\"}>\n                        <h2>\n                            نمودار سرعت\n                        </h2>\n                    </div>\n\n                    <GaugeDiagram/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Information\n","import React from \"react\";\nimport uuidv from \"uuid/v4\";\nimport * as d3 from \"d3\";\nimport '../scss/bar-chart-d3.scss'\n\nclass BarChartD3 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.id = '_' + uuidv().replace(/-/g, '')\n        this.getId = this.getId.bind(this)\n        this.setId = this.setId.bind(this)\n        this.state = {\n            company: {},\n            industry:{}\n        }\n    }\n\n    getId(id) {\n        return '#' + this.id + '-' + id;\n    }\n\n    setId(id) {\n        return this.id + '-' + id;\n    }\n\n    build() {\n        let width = 360;\n        let data = [\n            {value: -8, name: \"شرکت\", color_bar: \"#2394DF\", color_name: \"white\"},\n            {value: 13, name: \"صنعت\", color_bar: \"#71E7D6\", color_name: \"black\"},\n            // {value: 25, name: \"example 3\", color_bar: \"#BB4786\", color_name: \"white\"}\n        ];\n        let height = 216;\n        let bar_width = width / 3;\n        let scale_factor = 5;\n\n        let svg = d3.select(this.getId(\"svg\"))\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n\n        svg.empty()\n        svg.selectAll(\"*\").remove();\n\n        let bar = svg.selectAll(\"g\")\n            .data(data)\n            .enter()\n            .append(\"svg\")\n            .attr(\"x\", function (d, i) {\n                return bar_width * i\n            })\n            .attr(\"y\", 0)\n            .attr(\"width\", bar_width)\n\n        bar = bar.append(\"g\")\n            .attr(\"transform\", function (d, i) {\n                let translateY = (height - (d.value) * scale_factor)\n                return \"translate(0,\" + translateY + \")\"\n            })\n\n        bar.append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", bar_width)\n            .attr(\"height\", function (d) {\n                return (d.value * scale_factor)\n            })\n            .attr(\"fill\", function (d) {\n                return d.color_bar\n            })\n        let svg_name = bar.append(\"svg\")\n            .attr(\"x\", 8)\n            .attr(\"y\", 18)\n            .attr(\"class\", \"svg_name\")\n\n        svg_name\n            .append(\"text\")\n            .attr(\"class\", \"bar_name\")\n            .append(\"tspan\")\n            .attr(\"x\", 0)\n            .text(function (d, i) {\n                return d.name;\n            })\n            .attr(\"fill\", function (d, i) {\n                return d.color_name\n            })\n\n        let svg_percentage = bar.append(\"svg\")\n            .attr(\"x\", 8)\n            .attr(\"y\", -8)\n            .attr(\"class\", \"svg_percentage\")\n        svg_percentage\n            .append(\"text\")\n            .attr(\"class\", \"bar_percentage\")\n            .append(\"tspan\")\n            .attr(\"x\", 0)\n            .text(function (d, i) {\n                return d.value;\n            })\n\n        //xAxis\n        svg.append(\"rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", height)\n            .attr(\"width\", width)\n            .attr(\"height\", 1)\n            .attr(\"fill\", \"white\")\n    }\n\n    componentDidMount() {\n        console.log(this.props.data);\n        // if (this.props.data.ticker) {\n        //     httpService.httpGet(`stocks/financialStats?items=grNIL3y&tickers=${this.props.data.ticker}`).then(res => {\n        //         if (res && res.isSuccess) {\n        //             this.setState({company:res.data})\n        //         }\n        //     })\n        //     httpService.httpGet(`stocks/financialStats?items=grNIL3y&tickers=${this.props.data.ticker}&tickerTypes=industryIndex&exchanges=IREX`).then(res => {\n        //         if (res && res.isSuccess) {\n        //             this.setState({industry:res.data})\n        //         }\n        //     })\n        // }\n\n        this.build()\n    }\n\n    render() {\n        return (\n            <div id={this.setId(\"svg-container\")} align={\"center\"}>\n                <svg id={this.setId(\"svg\")} className={\"svg\"}>\n\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default BarChartD3\n"],"sourceRoot":""}